#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"


#define ALIGN(X) __attribute__((aligned(X)))


using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

constexpr int kTensorArenaSize = 6112;


#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;


static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[26];
TfLiteEvalTensor tflEvalTensors[26];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[12];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,2480 } };
const TfArray<1, float> quant0_scale = { 1, { 0.0030484069138765335, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(16) int32_t tensor_data1[4] = { 1, 1, 62, 40, };
const TfArray<1, int> tensor_dimension1 = { 1, { 4 } };
const ALIGN(16) int32_t tensor_data2[4] = { 1, 62, 1, 8, };
const TfArray<1, int> tensor_dimension2 = { 1, { 4 } };
const ALIGN(16) int32_t tensor_data3[4] = { 1, 1, 31, 8, };
const TfArray<1, int> tensor_dimension3 = { 1, { 4 } };
const ALIGN(16) int32_t tensor_data4[4] = { 1, 31, 1, 16, };
const TfArray<1, int> tensor_dimension4 = { 1, { 4 } };
const ALIGN(8) int32_t tensor_data5[2] = { -1, 256, };
const TfArray<1, int> tensor_dimension5 = { 1, { 2 } };
const ALIGN(16) int8_t tensor_data6[8*1*3*40] = { 
  /* [0][0][][] */ -66,-39,-56,8,-10,-80,-27,9,113,49,56,16,-63,-35,-19,-70,-19,37,25,33,60,56,6,90,76,73,-29,-28,-59,-65,-94,-65,-36,-126,34,-36,-77,-59,-6,-64, 12,-53,0,-70,-48,1,51,-4,97,71,67,-45,-49,-55,-69,-30,-12,14,82,94,93,-19,64,58,39,10,4,-28,-41,-69,-87,-22,19,-62,-25,-46,-110,-110,-3,39, -15,-60,-74,-24,21,-71,37,-8,73,9,97,-15,-63,-36,-57,-74,-30,-8,68,111,109,77,32,51,31,53,-11,-27,-127,-53,-81,-91,-127,-57,-74,-44,-33,21,7,9, 
  /* [1][0][][] */ 29,29,-12,-38,6,-12,8,-89,-42,72,47,-107,32,-45,-93,11,-18,17,4,39,11,15,27,-55,5,15,33,-62,-102,-48,-47,-54,-58,-43,-8,-121,-58,-57,-39,-7, -16,10,-5,-19,-19,-13,-82,-64,62,40,38,-26,-40,-98,-18,-48,-4,-19,-14,-20,23,19,35,-4,-53,-18,-23,-65,-101,-16,-103,-37,-63,-28,-30,-54,-127,-95,4,-21, -33,5,-26,52,-19,-46,-29,0,70,2,20,-47,-20,-16,-54,21,-80,2,-15,-86,-1,-84,-87,-41,-63,-44,5,-66,-25,-72,-42,-31,-35,-62,-47,-69,5,5,-32,43, 
  /* [2][0][][] */ 52,38,11,-34,-4,-55,-36,-35,23,-8,-25,24,14,7,-76,-34,14,-45,-36,14,-6,-77,11,2,5,-85,-79,-24,-13,-47,-127,-64,-89,2,-4,53,-46,-55,-6,-72, 78,21,24,-11,-44,-93,-33,-21,5,8,-7,-12,1,-28,26,11,-65,-29,-85,-92,-89,19,-51,-91,-56,-122,-62,-56,-49,-24,-33,-78,18,-21,24,-70,-29,-7,-12,42, 37,18,40,-10,13,-53,-21,-11,33,-94,-33,-105,-71,-55,38,-49,-15,-32,-39,-9,-20,-20,-71,-51,-66,-9,-13,-53,-98,-96,-33,-54,-78,-58,5,7,-49,-86,-25,-3, 
  /* [3][0][][] */ -32,-6,-108,-8,12,-64,-13,5,-2,-4,27,0,-26,4,39,-28,-13,-35,4,-33,3,37,-33,-28,3,8,-3,47,12,64,-37,38,36,-9,-42,-40,-71,24,-11,-29, -38,-79,-2,-24,-95,-44,-84,-57,-40,14,-74,-15,-69,-17,-40,-16,72,-21,-67,-30,-21,32,24,-85,22,-127,-36,-38,-12,-8,-19,-54,61,-6,30,-49,-1,-11,-37,28, -50,-19,-28,-61,-40,-4,-37,1,27,1,9,-16,24,62,42,-19,-9,-5,45,-14,33,-38,-28,-5,-32,-70,-26,65,29,44,-68,-37,-64,18,25,-10,-22,68,-20,-9, 
  /* [4][0][][] */ 36,3,-19,-2,-42,-21,-59,-42,-33,-45,-37,-55,-112,-104,-80,-35,-60,4,-35,-27,14,-3,3,-53,-22,-66,-58,-38,-7,-63,-89,-71,-25,-8,3,-61,-61,-40,10,7, 8,16,-12,-65,-98,-43,-2,-4,-29,-52,-37,-45,-127,-56,-86,-55,-53,-33,-66,-17,0,6,-61,-58,-43,-30,-81,-82,2,-16,7,48,-75,3,-28,-24,-4,-25,-54,44, -18,18,-20,-124,-90,-44,-81,-18,-25,11,-33,-13,-92,-48,-82,-12,-74,-91,-42,1,-87,-50,27,-23,-27,-42,-19,7,42,-23,-52,-13,13,58,40,55,54,82,78,27, 
  /* [5][0][][] */ 10,-8,-18,43,55,66,18,2,-61,-82,-52,44,22,48,61,42,0,-10,-44,-10,-52,-14,16,-1,-6,9,25,23,66,72,88,60,82,45,33,40,62,59,15,-57, -20,-41,-59,42,34,66,6,-8,-127,-57,-69,9,20,39,10,41,0,-61,-52,-71,-95,-67,-39,-59,-37,-32,7,26,49,67,63,45,14,39,29,22,28,45,9,-36, -40,-2,5,33,41,47,7,23,-35,-58,-39,47,71,36,42,53,14,-36,-14,-24,-61,-26,2,-16,0,11,19,38,87,53,42,65,55,29,25,1,22,24,40,-10, 
  /* [6][0][][] */ -75,-71,-99,-25,-17,-48,47,53,48,94,49,-2,-64,-23,-37,-9,18,19,72,44,87,35,-13,36,2,18,-16,-12,-48,-102,-79,-56,-41,-34,-11,-19,-12,-46,-25,56, -52,-58,-61,1,-3,-70,-56,25,101,82,115,6,4,5,-80,-54,-29,36,49,82,68,59,78,69,39,2,-31,-70,-51,-127,-67,-45,-112,-79,-20,-15,-27,-6,17,55, -70,-16,-53,-15,-62,-42,-5,22,113,101,96,-30,-59,-41,-30,-33,-100,34,61,64,93,62,-7,42,33,8,24,5,-21,-53,-60,-82,-48,-37,14,-54,-41,-65,-5,24, 
  /* [7][0][][] */ -41,-58,-29,11,17,44,-2,-4,-67,-45,-42,55,51,67,54,29,37,-1,12,-28,-6,-10,-2,11,17,49,48,65,125,83,59,51,84,55,52,33,84,63,19,-2, -24,-61,-25,58,21,49,19,3,-44,-41,-53,46,54,58,66,45,-2,-5,2,-23,-27,-22,49,22,22,27,43,72,117,127,102,103,96,110,71,64,80,87,82,6, -55,-48,-54,29,25,16,-22,-23,-125,-73,-76,-24,11,-2,-15,-20,-29,-50,-88,-82,-98,-29,-37,-64,-35,-41,-25,-7,-1,0,7,8,1,-32,-45,-32,-32,-48,-30,-64, 
};
const TfArray<4, int> tensor_dimension6 = { 4, { 8,1,3,40 } };
const TfArray<8, float> quant6_scale = { 8, { 0.0043728523887693882, 0.0050120940431952477, 0.0073868832550942898, 0.0061662085354328156, 0.0074671939946711063, 0.0059231547638773918, 0.0052232150919735432, 0.0057565635070204735, } };
const TfArray<8, int> quant6_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const ALIGN(16) int32_t tensor_data7[8] = { 1795, -15810, 21628, -32907, 343, -29273, -4105, -38481, };
const TfArray<1, int> tensor_dimension7 = { 1, { 8 } };
const TfArray<8, float> quant7_scale = { 8, { 1.3330233741726261e-05, 1.5278901628335007e-05, 2.2518226614920422e-05, 1.879711271612905e-05, 2.2763046217733063e-05, 1.8056185581372119e-05, 1.592248554516118e-05, 1.7548347386764362e-05, } };
const TfArray<8, int> quant7_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const ALIGN(16) int8_t tensor_data8[16*1*3*8] = { 
  /* [0][0][][] */ -33,-25,-76,23,-59,-61,38,-42, 15,-5,-127,-9,-70,-45,-2,-43, 16,-58,-20,4,-52,-2,13,-27, 
  /* [1][0][][] */ -86,18,-98,-87,-31,-68,19,3, -127,-76,-85,10,-75,-2,-33,-36, 33,34,-12,67,-19,-52,-100,-22, 
  /* [2][0][][] */ -88,17,-127,-51,-45,40,-76,-114, 1,-18,-41,38,-73,-67,-50,34, 24,-42,-101,-79,-66,-11,53,-57, 
  /* [3][0][][] */ -61,10,11,-12,48,28,-35,89, -11,12,12,47,114,41,-9,13, -90,-127,26,28,48,38,-57,-32, 
  /* [4][0][][] */ -4,86,38,-37,69,-36,-9,8, -127,-82,34,-56,43,-31,-64,1, 8,-30,33,47,0,7,-79,28, 
  /* [5][0][][] */ 3,-31,-118,31,7,43,-76,73, -33,0,-73,4,40,35,-69,-53, -48,-16,-69,-36,29,17,-127,70, 
  /* [6][0][][] */ -36,-13,10,78,34,16,-119,29, -61,-69,-18,-62,43,27,-103,-127, -90,-1,-26,69,16,-82,-93,-93, 
  /* [7][0][][] */ -67,-1,-71,-20,-61,46,-71,70, -5,7,-87,9,30,39,-4,-70, -95,-65,-101,-13,106,14,-71,127, 
  /* [8][0][][] */ -127,-92,21,-43,29,-83,-82,14, -51,-53,-105,48,33,-44,-21,-21, -61,-64,-4,-83,-40,-115,13,-30, 
  /* [9][0][][] */ -37,-33,26,-4,94,-51,-127,-125, -76,10,32,-75,48,-15,-35,-77, -89,-31,33,-28,28,-22,-26,-33, 
  /* [10][0][][] */ 7,17,-29,15,-60,-46,-9,-16, 22,-8,-45,1,-35,9,24,-45, 9,-21,-127,-31,-64,-32,22,-43, 
  /* [11][0][][] */ 15,-9,-62,19,-78,-48,22,-19, -3,-2,-4,-1,-52,-17,-5,-9, 5,-7,-127,7,-18,-38,11,-17, 
  /* [12][0][][] */ -11,-33,-115,-34,-13,22,-15,-77, -75,-45,12,-5,33,-127,8,-21, -35,18,-57,-46,1,-7,-16,18, 
  /* [13][0][][] */ -44,5,-62,36,-68,-127,0,-68, -80,-36,-81,-33,39,-25,-91,-102, -5,-50,-86,12,-67,10,33,-54, 
  /* [14][0][][] */ -55,-46,59,80,4,32,-127,-96, -39,-39,-42,-40,4,-26,-116,-25, -71,85,85,5,11,-8,-13,-92, 
  /* [15][0][][] */ 36,-10,-127,16,-19,-78,6,-52, -29,-5,-103,-23,-67,25,35,-26, 23,-31,-50,-24,-91,-35,-8,-36, 
};
const TfArray<4, int> tensor_dimension8 = { 4, { 16,1,3,8 } };
const TfArray<16, float> quant8_scale = { 16, { 0.0086394660174846649, 0.0028688556049019098, 0.0053236596286296844, 0.0044658752158284187, 0.0056590014137327671, 0.0046640848740935326, 0.0044547971338033676, 0.0039527639746665955, 0.003552531823515892, 0.0048388894647359848, 0.0097800064831972122, 0.012486324645578861, 0.0046165799722075462, 0.0045590898953378201, 0.0046853730455040932, 0.0083611849695444107, } };
const TfArray<16, int> quant8_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const ALIGN(16) int32_t tensor_data9[16] = { 129, -2442, -2693, -3256, -2575, -3091, -2918, -3374, -3878, -1639, 824, 632, -1993, -1628, -24, 988, };
const TfArray<1, int> tensor_dimension9 = { 1, { 16 } };
const TfArray<16, float> quant9_scale = { 16, { 0.00024498411221429706, 8.1350401160307229e-05, 0.00015095979324541986, 0.00012663612142205238, 0.00016046888777054846, 0.00013225663860794157, 0.00012632198922801763, 0.0001120861415984109, 0.000100737001048401, 0.00013721345749218017, 0.00027732574380934238, 0.00035406716051511467, 0.00013090956781525165, 0.0001292793604079634, 0.00013286029570735991, 0.00023709307424724102, } };
const TfArray<16, int> quant9_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const ALIGN(16) int8_t tensor_data10[64*256] = { 
  -13, 3, -1, -18, -12, -8, -14, -12, 7, -15, -10, 2, -4, -15, -10, -15, 25, -2, -4, 1, -6, -9, -9, -22, -9, -29, 8, 13, -10, 10, -16, -9, -12, -8, -7, -2, -6, -2, -5, 0, -3, 7, -14, -27, 14, -7, 8, 14, 0, 2, -12, -16, -13, -18, 11, -9, -2, -35, -35, -26, 8, 8, 14, -17, -19, -7, -6, 0, 28, -13, -11, -4, 9, -16, -19, -1, 3, 8, -34, -14, -27, -12, -1, -18, -4, -22, 1, -9, 0, -30, -13, -21, -5, 2, -15, 4, -11, 4, -8, 4, 12, 1, -6, -21, -6, -28, 6, 8, -6, -1, -13, -16, -25, -12, -15, 4, 7, -3, -17, -5, 4, -28, 17, 3, -11, -11, -6, -12, -3, -6, -8, 13, 7, -18, 1, -14, 3, 23, -7, -12, 8, -15, -2, -4, 3, 1, -8, -15, 1, -8, -31, -15, -2, -26, -13, -28, 7, -5, -11, -23, -12, -13, -15, -2, -24, -19, 4, -6, -2, -20, -29, -15, 0, -1, -17, -20, -10, -6, 3, -1, -8, 9, -23, -30, -1, -36, -2, 0, -1, 3, -35, -9, -16, 1, 2, 10, -14, -8, -7, -13, -12, -4, 0, -20, 1, 8, -11, -21, -11, 3, 10, -2, -27, -20, 0, -19, -7, -18, 8, -12, -6, 2, -24, 4, 11, -15, -1, -19, -23, -18, 12, -7, 0, -18, 24, 2, -1, 4, -14, -4, 11, -11, 6, -18, -6, -10, 0, -4, 0, -8, 15, -20, -2, -6, -4, 56, 
  -29, -8, 11, -2, 0, 24, 48, 31, 2, 15, -34, -19, 8, 9, 10, -13, -18, 6, 9, -9, -17, 21, -29, 4, -22, 2, 22, -14, 2, 13, 16, -40, -5, 7, 18, -12, -23, -7, 19, 25, 0, 36, -15, 10, 1, 14, 9, -20, -10, 4, 12, 15, 13, 8, 29, 33, 4, 15, -16, -21, -7, 1, 23, -39, 17, 7, 26, -10, -8, 10, -2, -10, -6, -24, -3, 6, -9, 7, -9, -29, -21, -7, 42, -8, 15, 50, 0, 39, 8, -25, -38, -1, 9, 8, -30, -12, -7, -1, 9, 24, 7, 58, -4, 35, 3, 1, -28, -25, 12, 22, 7, -22, -17, 8, 31, 3, 12, 15, -7, 37, -13, 29, -25, -29, -14, 4, 13, -36, -25, -12, 14, 36, 31, 0, 12, 18, -3, 5, -20, -28, -6, -3, 10, 0, 24, 5, -12, -1, 25, 41, -8, 25, 2, 44, -17, -10, 4, 13, -8, 13, -24, -6, 30, 2, 34, 65, 11, 45, -2, 0, -21, -2, 8, -10, 18, -35, -45, 5, -1, 22, 10, 19, 4, -4, 0, 30, -37, -20, 9, -16, 31, -41, -27, 11, 0, 16, -10, 3, 17, 11, -1, -5, -2, -11, 6, 2, 12, 3, 5, -6, 19, -15, 17, 9, 2, 18, -25, -4, -40, -9, 9, 7, 11, -35, -12, -3, 58, -7, 3, 14, 14, 33, -4, 16, -34, -20, 11, 6, -22, -35, -40, -7, -24, 26, 32, 1, 23, 18, 13, 14, -18, -14, -9, -10, -2, -8, 
  15, 10, -13, -14, -43, -9, -2, 4, -8, -3, 37, 16, -3, -40, -2, 83, -1, 2, 17, 23, 30, 4, 22, -23, -6, -4, 3, -27, -6, 17, 36, -1, 8, 6, 10, -9, -7, -3, -2, -35, -4, -19, 22, 0, 11, -5, 11, 28, 2, 3, 30, 11, -18, -11, -17, -32, -10, -21, 2, 4, 6, -26, -38, 22, -11, -7, 22, -3, 17, -12, -11, -6, 8, -10, 22, 15, 6, -11, 16, 9, 36, 7, -2, -6, -17, -38, 11, -34, -1, -9, 30, 34, 11, -11, -20, 41, 10, 5, 14, 31, -9, -30, 39, -55, 9, 11, 24, 19, 0, -9, 2, 27, 9, -6, -34, -19, -40, -24, 8, -43, 6, -2, 12, 33, -3, -13, -22, -6, 46, 1, 4, -19, -15, 0, -8, -42, -9, 24, 67, 39, 11, -22, -24, 28, 31, 4, 11, -3, 6, -15, -34, -41, -1, -40, 7, 37, -13, 25, -33, 32, 21, 1, 6, 32, 35, -22, -42, 3, 5, -26, 47, 37, 9, 18, -62, 43, 24, 6, -7, 0, -18, -17, 20, -47, 14, 0, 33, 39, 6, 21, -29, 11, 25, 7, -8, -18, -4, -7, -2, -5, -2, 26, 36, 19, 20, -25, 19, 27, 22, -3, 26, 5, -23, -18, 11, 16, -9, 13, 6, 25, 3, -31, 16, 9, -5, 4, -12, -5, -2, 9, -2, -9, 17, -20, 28, 38, 2, -15, 9, 6, -9, 6, 33, -2, 25, -10, -2, -27, 3, 6, -21, -14, 4, -8, 13, -1, 
  -12, -1, 5, 11, 20, 6, 22, 8, 10, 16, -32, -18, -2, 11, -39, 11, -26, 9, 8, -20, -29, 16, 5, 8, -1, -39, -20, -8, -17, 0, -22, -41, -9, 2, -2, -10, -35, -37, -11, -2, -9, -10, -21, -8, -13, 6, 1, 9, 4, -3, -9, -12, -23, -20, 16, -23, 2, 1, -5, -2, -6, 0, -10, -4, -18, 2, -8, -9, 14, -31, 34, -57, -19, 66, -21, -21, -13, 8, 34, -31, -15, -8, -10, 15, -38, -26, -12, -38, 5, 8, -21, -19, -4, -4, -10, -34, 23, 1, 3, -14, -3, -10, -2, 3, 10, -26, 6, -11, 0, -16, -5, 2, 10, -14, -6, -21, 0, -29, 15, -5, -3, -31, -13, 5, 1, -3, 13, -1, -12, 13, -8, -37, -36, -27, -16, 1, 6, -25, 10, 5, -2, 7, -19, 6, -15, 12, 7, -15, -26, -9, 32, -16, 7, -2, -16, -30, -6, -15, -2, 2, 12, -1, -5, 0, -2, -5, -11, -9, -5, -4, 2, 14, -14, 3, -16, 6, -10, -12, -2, -5, -2, 3, -2, -21, -1, 13, -46, -5, -15, 10, 39, -2, -11, -3, -8, 11, -26, -27, 15, -5, 8, 1, -2, 13, -11, 6, 32, -23, -6, 8, 4, -15, -13, -8, -12, -8, -5, -30, -6, 4, 0, -13, -15, -9, 8, -1, -1, -44, -5, 7, -10, -32, -10, -51, 31, 21, -13, 8, -7, 2, 27, -8, -16, -13, -14, -5, -13, -4, -6, 11, 18, 52, 2, 10, 0, 14, 
  -16, -6, 36, 38, 14, 24, 11, 48, 3, 27, -32, -33, 10, -10, 9, -7, -24, -11, 40, 14, 18, 17, -8, 2, -11, -16, -44, -52, 4, 36, -5, -16, -5, -6, 57, -5, 6, -3, -19, 6, -4, 26, -38, -31, 18, 10, 37, -48, -12, -4, 28, 21, 15, 5, 9, 17, -7, 8, -6, -15, -9, 6, 17, -18, -4, -2, 42, 5, -16, -16, 38, 1, -14, 27, -28, -25, -3, 14, 12, -42, -21, -9, 63, 33, 15, 24, -45, 16, 2, 25, -26, -59, -7, 42, -8, -41, -1, 19, 31, 10, 6, 24, -28, 27, -8, -18, -8, -6, -6, -1, -25, -18, -1, 0, 55, 14, 27, 11, -13, 11, 14, 7, -14, -23, 2, 5, 15, -19, -28, 8, 49, 19, 16, 3, 23, 16, 21, 3, -33, -1, -24, 17, 28, 16, -13, 9, 10, 21, 21, 25, 1, 20, -6, 2, -4, -2, 1, -1, -30, 12, -13, 7, 26, 7, -13, 19, 12, 20, 5, -9, -18, -7, 6, 16, 11, -19, -35, 0, 15, -3, 27, 17, 3, 28, -9, 17, -35, 2, 16, 7, 31, -20, 6, -10, 18, 17, 32, 1, 4, 3, 3, 20, -28, -12, 4, 28, -14, 3, -6, -6, 23, -6, -29, -5, -3, 19, -16, 8, -27, -21, -5, 18, -11, -20, -18, 8, 40, -25, -2, 13, -23, 28, -3, -14, -34, -26, -4, 21, -1, -25, -20, 11, 19, 6, 13, 3, -17, 20, -3, -16, -18, 11, -12, 9, -13, 1, 
  -21, 10, 34, -9, 1, 18, -9, 44, -6, -10, -3, -46, 17, 20, -24, 10, -31, -11, 58, 24, -26, 14, -12, 38, 8, -33, 6, -33, 12, -12, -19, 19, 1, 1, 32, -30, -17, -28, -15, 24, 4, -21, 4, 13, -7, 10, -24, -4, -22, -2, 91, 3, -11, 9, 12, 12, -6, -16, 30, -25, 5, 0, 13, 7, 37, -11, 83, -12, -35, 0, 9, 2, 2, 14, 10, 20, 8, 1, -16, 26, -16, -9, 64, 22, -20, 38, -11, 37, -7, -10, -20, -19, 0, -8, -27, -18, -28, 4, 62, 11, 11, -7, -18, 21, 6, -20, -30, -2, 12, -2, -42, 0, -25, 7, 23, 7, 46, 27, -7, 67, -10, -4, -21, -15, -7, -1, -3, 21, 5, 12, 28, 16, 15, 10, -8, 28, 11, -18, 42, 10, 3, -20, -23, 42, 39, 5, -3, 15, -11, 43, -3, 28, -11, -11, 1, 20, 6, -6, -38, 26, -18, -3, 31, 37, 17, 56, 21, 53, 0, 21, -38, -14, -1, 2, 8, -58, -24, -1, 21, 14, -13, 26, -17, 7, 0, -36, -51, -31, -7, -1, -17, -28, -31, -5, -2, 3, -14, -4, -20, -5, 0, 0, 23, -7, -5, 2, -42, 4, 4, 1, 30, -34, -14, -13, -25, -3, -9, 10, -16, -5, 8, -2, -15, -28, -23, -4, 26, 1, -16, 18, -24, 30, 3, -14, -28, -23, -17, 13, -31, -6, -11, 7, 75, -1, 10, -25, 2, -20, 1, -38, -26, -53, -2, 10, -29, 13, 
  21, -10, -14, -41, -59, -52, -11, -24, -12, 15, 46, 25, -5, -33, -30, 49, 32, -9, 10, -12, 33, -70, -10, -27, -2, 1, 9, -10, 7, 24, 31, 34, 14, 4, 16, 1, -43, -48, -18, -19, -30, 6, 10, 3, 11, 14, -1, -10, -25, 11, 18, -12, -26, 12, 4, 7, 4, 9, -17, -8, 8, -5, -60, -3, -6, 6, 59, 1, -3, -58, -41, -17, 18, -17, 25, 5, -3, 15, 5, 30, 36, 4, 9, -36, -40, -4, -26, -27, 8, -53, 19, 50, 12, -9, -10, 26, 45, -11, 43, 14, 44, -26, 26, -48, 3, -12, 24, 50, 1, -2, -18, 55, 13, -4, -1, -1, -38, -9, -17, -13, -20, -33, -10, 23, 7, -22, 30, -10, -4, -1, 8, -3, -39, -37, -7, -17, -15, -40, 7, 3, 8, 2, -35, 29, 31, 11, -3, 19, 50, 16, -9, -18, 10, -25, 36, 19, 9, 44, 16, 2, 14, -15, 3, 21, 10, -15, 4, 13, -17, 18, -11, -9, 17, -18, -13, -22, 14, 1, -14, -26, -15, -8, -45, -61, -6, -13, -10, 5, 11, 29, -23, -9, 11, 1, -23, -2, 8, -37, -39, -34, -5, -2, 26, 10, 13, -42, -19, 5, 6, -4, 4, -19, -20, -3, -3, -26, -15, -11, 53, 45, -5, -29, 2, 49, 22, 11, 24, -19, -16, -11, 9, -52, 3, -8, 26, 44, 1, -17, -25, 16, -6, -2, 18, -22, -10, 9, -1, 1, 3, -8, 4, 8, -3, -2, 22, -18, 
  -4, -6, 8, 6, -7, -19, -11, 2, -1, -6, -60, -39, -1, -6, -48, -2, -32, 1, -10, 9, -16, 5, -4, -37, -3, 9, -31, -29, -2, -8, -18, -17, -6, -14, 16, 0, 14, -19, 27, -2, 1, 68, -17, 2, 4, -11, -9, -39, 3, 6, -49, -4, 2, 26, 41, 25, -20, 14, -1, -24, 0, 5, -19, 3, -33, -9, -18, -2, 38, -9, 62, 3, -6, -6, -44, -45, 5, 1, -28, -31, -24, 0, -6, 41, 79, -6, 18, -18, -1, 1, -42, -43, 1, -10, 25, -42, 13, -9, -8, -30, 7, -20, 1, -23, -10, 42, -15, 0, -14, -6, -16, -22, -41, 7, 9, 25, 21, -7, -45, 1, 18, 41, -18, -9, -11, 4, 30, -21, -29, -6, -3, -14, -8, 10, 36, 6, 10, -1, -27, 4, -1, 6, -12, -28, -24, -4, -8, 10, -29, -23, 13, -4, -13, 36, -41, -5, 7, -1, -26, -23, -22, -4, 38, 14, -8, 18, -13, -28, -13, 3, -23, -39, 8, -27, -29, -25, -14, 4, 11, -32, -22, 8, -4, 22, 4, -20, -29, -27, -9, -13, -28, 10, 12, 2, 12, 17, 15, 23, 23, 45, 1, -12, -42, 4, -1, -12, 55, -9, 26, 7, -13, -6, 0, 36, 32, -1, 11, -6, -6, 8, -9, 1, 0, 15, 2, -9, 7, 10, 17, 16, 22, 44, 1, -5, 5, -9, 0, -9, 42, 9, 8, -13, -13, 14, -17, 22, 12, -11, -7, -6, -1, 20, -4, -7, -17, -1, 
  44, 8, 34, -57, -39, -25, -1, -2, -7, -18, 49, 23, 15, -31, 14, 44, 18, -6, -20, -34, -18, -45, -8, -33, 10, -14, 34, 33, 2, -5, 17, 25, 4, 6, 30, -42, -46, -42, -16, -31, 5, -41, 17, 12, 5, 5, -33, -3, -4, -8, 36, -29, -8, -16, -28, -20, -2, -47, 26, 33, 18, -7, -14, 21, 15, 15, 57, -17, -34, -13, 1, -31, 5, -12, 32, 8, -6, 27, -20, 31, 27, 12, -9, -6, -61, -6, -47, 1, -17, -31, 20, 39, -8, 1, -30, 2, 20, -5, 24, -22, 24, -12, -6, -18, 6, -37, 7, 9, 5, -4, 26, 12, 6, 3, -18, -17, -12, 14, -4, -30, -4, 5, 2, -4, 18, 1, 16, 33, 4, 12, 13, -14, -10, 5, 5, -27, 21, -21, 22, 18, -4, -3, 17, -2, 13, 4, -3, 10, -11, -4, 14, -1, 21, 9, 21, 0, -13, 20, -28, -8, 47, 2, 0, 16, -14, -29, 29, -21, 4, 33, 59, 25, 1, -4, 16, 22, 23, 16, 29, -41, -9, -46, 33, -33, 21, 9, 6, 19, 10, 14, -60, 24, 56, -13, -1, 28, 24, -24, -26, -11, -7, 43, 26, 1, 2, 3, 16, 36, 6, -5, 43, -15, -21, 1, -27, 14, 10, 5, 76, 24, -10, -2, 16, 42, -17, 5, -14, 23, 20, 9, -16, -6, 0, -14, 24, 4, -2, -10, 7, 31, 25, 15, 1, -3, 53, -13, -5, -19, -2, -26, -34, 19, -4, 0, 21, 4, 
  -27, -14, 101, 14, 4, 19, 10, 30, 13, 43, -15, -47, 4, 70, 9, -48, -37, -14, 68, 78, 13, 2, 10, -18, 14, 40, -37, -48, 36, 4, -4, 6, -6, -8, 2, -2, 0, -32, -21, 27, 32, 36, -36, 13, 14, 2, 16, -54, -24, -14, -1, 16, 26, 15, 48, 49, 19, 41, -56, -72, -18, 1, 33, -25, -14, 17, 100, 1, -17, -11, 58, -21, 10, 71, -15, -58, 0, 10, 16, -6, -20, 19, 31, 6, -37, 3, -13, 24, 7, -4, -22, -13, 38, 23, 32, -5, -20, -4, -6, 0, -15, 7, -34, 44, 26, 26, -81, -71, 28, 29, -5, -49, -13, -2, 49, -4, 21, -5, -19, -41, -12, 9, -22, 24, 0, 32, 10, -21, -10, -1, 88, 70, 25, 14, 0, 23, -39, 7, -37, -64, -7, -14, 33, -42, -32, 5, 29, 19, 20, 42, 21, 47, 23, 76, -52, -81, 38, 24, -22, -81, -40, -15, 36, -5, -22, 12, 17, 53, -6, 34, -82, -54, 9, -21, 14, -69, -30, -5, 23, -3, 25, 41, -10, -25, 20, 14, -64, -41, 9, -2, 21, -47, -22, 3, 4, 1, 10, 26, 0, 20, 1, -16, -6, -56, -7, 21, 22, -49, -13, 23, -3, 45, 9, 25, 33, 17, 35, -5, -36, -39, 44, -16, 41, -41, -26, 0, 28, -46, 32, 1, 17, -3, 22, 6, 46, 10, -31, 21, 36, -11, -28, -7, 18, 68, 46, 9, 21, 62, 7, 33, -4, 11, -21, -11, -1, 18, 
  20, -16, -25, -12, -14, -8, 24, 23, 12, 3, 30, 51, 17, 9, -20, 81, 45, -6, 25, -10, 28, -23, 21, 4, -26, 0, -1, 42, 12, 53, 13, 51, -6, -5, -7, 26, -40, -29, 15, -15, 5, -2, -4, 7, 17, 37, -29, -7, -2, -5, -23, -16, -31, -24, -22, -7, 4, -10, 9, -10, 8, -3, 9, 19, -22, 9, 10, -4, -25, -36, -33, -28, 7, -28, 21, 23, -8, 21, -75, 41, 43, 15, -2, -27, -67, -55, 7, -20, 19, -32, 31, 49, 10, 0, 4, 64, 6, 7, 5, -11, -62, -44, 37, -49, 16, 21, 5, 19, -6, 15, -17, 20, 13, 7, 25, -32, -25, -38, -17, -25, 10, -19, 22, 39, -7, 2, 9, 16, 1, -4, 37, -40, -58, -32, -17, -14, -1, -54, 60, 53, 14, 4, -65, 44, 36, 8, 18, -11, -28, -17, -24, -69, 4, -68, 29, 29, -2, 33, -51, 40, 15, -7, -18, 28, 27, -6, -31, 13, 17, 6, -6, -1, 35, 6, -52, 29, -22, 1, 15, 35, -4, -3, 31, 29, -6, -9, 27, 14, 6, 25, -31, 35, 52, -4, 31, -24, -31, -35, -3, -25, -1, -16, 4, -19, -2, -12, -26, 35, 1, 8, 32, 1, -1, -43, 7, 3, 13, 3, -4, 37, -10, 7, -36, -16, -4, 4, 25, 29, -14, 31, -37, 43, 26, -26, 3, 31, -17, -8, -14, 6, 14, 10, 70, 18, -25, 20, 11, 9, 19, -10, -1, -6, -4, 16, -12, 43, 
  -6, -6, 1, -12, -11, -2, -13, 9, 1, -27, -16, -15, 17, -1, -8, -10, -13, 5, 16, 19, -14, -7, -16, -3, 18, -17, 0, -4, -1, 1, -30, 3, 0, 0, 12, -18, 7, -3, -1, -5, -8, 1, -13, -11, -1, -5, -18, -21, -2, 11, 11, 3, 11, 8, 12, 12, -6, -3, -24, -5, 8, -4, -12, 3, -9, -8, -13, -11, 1, -14, -2, -12, -4, -16, 1, 8, -5, -5, -8, -9, -18, -11, -3, -23, -23, 0, 14, 2, 8, -5, -12, -9, -9, -12, -18, -30, -7, 6, -23, -2, 5, -22, -16, -16, 5, -15, -14, -6, -9, 3, -16, -22, -14, 1, -7, -12, 10, 17, -16, 24, 7, -6, -18, -12, -6, -17, -25, -1, -12, 6, -9, -21, -7, 2, -11, 14, 14, -20, -5, 3, 10, -8, -50, -26, -13, 5, 0, -5, 7, 10, -19, 9, -2, -21, -20, 10, -1, -7, -16, -10, -24, 2, -6, -17, 3, 14, -2, 7, -7, -24, -13, 2, -2, 5, -19, -21, -14, 9, -1, -10, 8, -20, -10, -26, -11, -3, -13, -3, -2, -5, -14, 17, -1, -9, -3, -23, -7, -5, -7, 20, 3, -16, -1, 3, -1, 1, -32, -14, 19, 5, -1, -3, -22, 2, -22, -21, 0, -5, -14, 28, 0, 2, -18, 8, -10, 13, -1, -10, 7, 12, -5, 14, -2, -27, -5, -7, -1, 1, -26, 6, -29, 12, -5, 4, 0, -22, -14, -14, 7, -23, -20, -15, -5, 14, -10, 11, 
  35, 9, 4, -35, -11, -34, 7, -15, 4, -50, 29, 12, 9, -17, -56, 40, 19, -12, -2, -43, 10, -10, -33, -46, -9, -41, 36, 31, 13, 34, -12, 57, 22, 5, -14, -50, -20, -29, -40, -33, -8, -44, 22, -9, 10, -8, -68, -5, 23, -6, 14, -20, -23, -35, -21, -10, -3, -40, -1, -12, 5, 15, -22, 61, 6, 7, -3, 4, -3, -37, -11, -22, -3, -3, 44, 48, 11, 41, 1, 71, 19, -2, 17, -10, -34, 3, -30, 15, 5, -17, 32, 8, -5, -3, 16, 37, 11, 1, 1, 17, 6, -26, -29, -23, -11, -19, 18, -9, -15, 0, 25, -5, -16, -9, -8, 5, -19, -36, -39, -59, -11, 16, -8, -20, 15, 7, -22, 16, 14, -12, 38, 15, -12, -22, -34, -27, -1, -30, 31, 37, 11, 4, -30, 26, 31, 6, -39, -1, -45, -39, -33, -45, 2, -46, 51, 32, 6, 35, -58, 11, 9, 5, -42, 35, -23, -28, -11, 6, 2, -7, 44, -24, 6, 10, -21, 21, 13, 5, -25, 7, -14, -48, -15, -4, -28, -1, 1, 33, 11, 25, 5, 37, 38, 1, -1, -14, -21, -7, -14, -24, 4, 5, -8, -13, -3, 16, 29, 31, 12, -8, 32, -13, -45, 5, -12, 13, -22, -5, 29, 15, -3, -3, 10, 45, 24, 7, -23, -23, 14, 25, -21, 15, 19, 31, 27, 30, -9, -2, 18, 19, 4, -7, 46, 11, 43, -33, -9, -19, 23, 3, 29, -6, -14, -4, 60, -6, 
  17, -5, 31, -1, -15, 2, -15, 15, 11, -3, -14, -14, -2, 18, 18, -21, -33, 8, 40, -7, -46, 26, 5, -13, 18, -1, 0, -37, -4, -11, -8, -5, -9, 1, 22, -33, 8, 9, -32, 36, -14, -12, -34, -20, 6, 31, 2, -59, -38, 10, 37, 31, -2, 8, 17, 30, 3, 27, -20, -42, -11, -6, 2, -24, -4, -1, 31, -23, 0, -20, -12, -6, 10, -2, -17, -21, -5, 3, -52, -39, -27, -7, -38, -31, 0, 50, -1, 19, 2, -11, -2, -25, 9, 4, -46, -57, 2, 3, 21, 12, -15, 23, -19, 19, -4, -20, -17, 11, 8, 2, -5, -7, -25, 8, -19, -34, 6, -12, -21, -21, 7, 43, -13, 10, -5, -9, -2, 7, 12, 6, -31, 3, 7, -1, -5, 3, 5, 10, 15, 18, -3, 2, 18, 13, 5, 7, 9, -16, 29, 8, -6, 50, 15, 17, 7, 12, -5, -10, -22, 54, -5, 2, 7, 21, -4, 31, -22, 11, 8, -46, -28, -4, -9, 12, -27, -29, -12, -4, -27, -13, 2, 34, -2, -5, -3, 23, -34, -26, 3, -20, -20, 2, -15, -3, 2, 16, 41, 42, -17, 74, 17, 27, -44, 24, -2, -2, -40, -2, 4, -1, 17, 63, 5, 23, -22, 28, 13, 29, -17, -12, -6, -3, -34, 25, 8, 4, 23, 34, 19, 0, -21, 50, 9, 25, -9, -36, 2, 7, -49, -8, -26, 10, 21, 20, 67, -19, -8, -5, -1, 87, -39, -11, 7, -9, -36, 9, 
  14, 13, 44, -67, -23, -9, 6, 13, -10, -13, 33, 11, -6, -18, -46, 5, 12, -2, 4, -14, -30, -62, -42, -49, -4, -60, 24, 43, 17, 19, -33, 50, 26, -14, 15, -46, -26, -22, -40, -14, -24, -61, 38, 17, 4, 19, -44, 31, 16, 8, 34, -26, -26, 4, -8, 5, -1, -40, 19, 14, 0, 5, 8, 6, 8, -6, 55, 13, 24, 25, -28, 7, 9, -27, 9, 10, 13, 6, -26, 32, 5, -3, 2, -4, -28, -10, -27, 4, -21, -35, 3, 2, 0, -22, -33, -6, 4, 3, 49, -10, 19, -17, 36, -28, -7, 6, -7, 0, -7, -5, 14, -18, 7, -3, -22, -15, -28, -9, -31, -23, 8, 3, 6, 1, -6, 4, -29, 38, 13, -11, 74, 5, -5, 20, 12, 1, 7, -12, 9, 11, 10, 0, -8, 13, 12, 2, 6, 2, 12, 4, -29, -19, 6, -41, 25, 26, 8, 37, -47, -17, 41, 2, 0, 10, -15, -30, -4, 16, 1, -35, -12, 31, 11, -12, -75, 2, 40, -7, 1, -5, 17, -13, 29, -7, -11, -30, 1, 28, 13, 19, 11, -3, 15, -2, -19, -37, -21, -31, -16, -62, 4, 0, -12, -21, 3, -30, 18, 3, -4, -13, 22, -6, -30, -56, -1, -23, -9, -14, 6, 39, 6, -28, -8, 48, -3, 9, -9, -29, 12, -12, 25, -17, 5, 25, 24, 6, -11, -19, 1, 3, 38, 6, 6, -19, 4, -21, -10, 25, -2, 9, -17, 18, 9, -9, 6, 29, 
  -9, -15, -11, -5, -18, -13, -6, -6, -2, 9, -8, -5, 4, 0, -14, 14, 6, -9, -13, -27, -1, -21, -3, -24, -3, -23, 3, 5, -11, -2, -20, 10, 8, -7, -21, -15, 5, 5, -1, -4, 17, -15, -12, -6, 14, 28, -4, -17, 2, 1, -10, 1, -10, 6, -9, 2, -6, 0, -11, -5, -10, 15, -7, -8, -10, -10, 11, -14, 19, -21, -1, -3, 6, -24, 15, 9, -8, 4, -20, 9, 14, 8, 4, -22, -2, -23, -9, 1, -3, -14, -11, 10, -3, -5, -26, 2, -9, 7, -7, -5, -13, -21, -4, -20, -11, -17, 12, -14, -6, 48, -25, -10, -5, 3, -5, 2, 0, -9, -4, -23, -2, -19, -3, -4, -9, 11, -5, -12, -6, 2, 12, -21, -8, -20, 1, -14, -11, -12, -9, -25, -9, 18, -12, -14, -2, 2, 3, 1, -11, 0, -15, -18, 0, -10, 9, -7, 4, 8, 13, 6, -1, -6, -8, -7, -23, -1, -9, -23, -1, -16, -4, -5, -20, -11, -21, -1, 15, 6, 2, -8, -3, -21, -12, -8, -11, -7, 13, 7, -3, 7, 24, 1, 2, -3, -8, 1, -11, -19, 1, -5, 7, -17, 5, -20, 1, -9, 5, 3, 2, -13, 18, -3, -29, -38, -5, -10, 2, -13, -12, 1, 5, 1, -13, -9, -12, 1, 1, -10, 2, -13, -4, -9, 7, -5, 6, -4, -13, -14, 2, 0, 27, 10, -8, -7, 16, 1, -11, -14, -6, -16, -2, -14, 5, 16, 18, 5, 
  26, -6, -10, -28, -30, -20, 5, -13, -7, -19, -7, -10, 7, -7, -20, 40, -8, 10, -11, -2, 1, -20, -18, -19, 1, -26, -27, 3, 16, 4, -13, -10, 11, 6, -14, 36, 11, -6, -14, 9, -7, -14, 19, -7, 1, -7, -49, -8, -12, 3, -23, -4, -5, -8, -24, 10, 0, -27, -4, 0, 11, -13, -36, 12, -24, 15, -16, -16, 21, -40, -15, -3, 6, -24, 3, -8, 0, -6, -15, 15, 19, 14, 46, -8, -24, -27, -13, -26, 12, -31, 4, 0, -8, -12, -26, 27, -8, -7, -21, 1, -24, -23, 2, -30, 2, -18, -3, 8, 0, -13, -49, 30, 20, 6, -12, -19, -19, -26, -16, -16, 1, -29, -2, 20, -4, -9, -17, 37, 4, -4, 0, -18, -9, -22, -18, -12, -1, -34, 5, -8, 15, -12, -27, -15, 0, 4, 10, -1, -5, 1, -36, -6, -5, -17, 9, -18, -10, -4, -30, -6, -6, 3, -44, -12, -25, -29, -38, -8, 8, -19, -1, 6, 11, -11, -25, -2, 8, -3, -16, -23, -12, -11, -7, -25, 2, -30, -7, -10, 15, 0, 3, -3, -6, -8, -13, -22, -30, -26, -25, -32, 7, 2, -7, -23, 12, -14, -8, 0, -25, 0, -2, -3, 27, -32, 12, -14, -7, -24, -16, -27, 1, -2, -5, 3, -22, -3, 8, -10, -37, 9, -12, 3, 8, -8, 2, 21, 0, -11, -7, -7, 17, -6, -34, -4, 13, -9, -12, -14, 2, -15, -15, -2, 7, 13, -18, -3, 
  -2, 0, -23, 12, 18, -31, 23, -3, -4, -29, 12, 33, -5, 34, -8, 7, 1, 6, 16, -9, -27, -21, -4, -61, -6, -43, 3, -24, -1, 48, -23, 5, 20, -6, 0, -63, -41, -65, -12, 10, -13, -2, 0, -8, -7, 39, -55, 31, 26, -6, 33, -27, -16, -7, -24, -19, 4, -4, 22, 24, -17, 30, -14, 31, 36, 13, -5, -31, -47, -15, 3, -6, -1, 4, 37, 11, -2, 47, -25, 47, 37, 6, 1, -6, 0, -9, -10, -8, -9, -9, 56, 69, 15, 33, 4, 87, 52, 11, -12, -29, -4, -33, -26, -13, 5, -17, 13, 12, -10, 26, 24, -5, -13, -4, -1, -8, -8, -10, -5, -27, -18, -21, 58, -9, -6, 5, -34, 11, 46, -10, -6, -25, -27, -15, 8, -1, -12, -34, 53, 16, 11, 45, -37, 67, -6, 8, -30, -43, -57, 3, -7, 5, -2, -33, 59, 35, -7, 55, -42, 22, -10, -16, -7, -18, -41, -14, -12, -3, 0, -21, 24, -32, -7, 48, -48, 36, 59, 6, 7, -11, -68, -53, -10, -69, -6, 34, 53, 19, 5, 32, 4, 29, 33, 2, 37, 17, -23, 17, 8, -24, 8, 21, -10, -30, 11, -9, 0, 70, 15, 0, 47, -24, -45, -36, -1, -22, 8, -16, -3, 13, 5, -2, 6, 27, 54, -13, 44, -58, -41, -26, -31, -37, -2, -12, 3, 44, -16, 23, 77, 46, 4, 2, -8, -33, 0, -16, 18, 1, -2, 77, 49, 59, -9, 2, 31, 72, 
  -11, 7, 15, 20, 0, 8, 21, 16, 9, 65, -34, -26, -4, 0, -13, -21, -26, -5, 48, -6, -28, 11, 17, -4, -2, 25, -41, -35, 17, 21, 37, 10, -26, 14, -11, 23, 30, -3, 18, -25, 3, 23, -22, -27, 12, 24, 21, -46, -23, -8, -4, 2, -16, 24, 28, 27, 17, 3, -14, -32, -4, 3, 9, -32, 12, 10, -13, 9, -6, -14, 28, 9, -5, 5, 7, -12, 0, 26, 11, -39, -18, 7, -16, -1, -29, -16, -14, 5, 16, 13, -15, -20, 12, 3, 2, -41, -16, -3, 1, 4, 16, -10, -4, 14, -12, 10, 4, 14, 10, 15, 6, -44, -23, -2, 24, 3, 2, 14, 25, 21, -8, -6, -38, -26, 11, -13, 6, -11, -41, 4, -14, -14, 17, 16, 19, 4, 15, 7, -24, -24, -4, -2, 23, -43, -29, -5, -17, 11, 10, 28, -5, 30, -7, -2, -20, -47, 22, -1, 3, -31, -13, 15, 7, 10, -43, 20, 8, 22, -1, -15, -2, -18, -7, -4, -9, -48, -20, 7, -33, -2, -8, 38, -6, 7, -9, 7, -26, -49, -2, -29, 20, -11, -39, 5, 38, -5, 4, 7, 33, -1, 26, 29, -23, -35, 3, 14, 7, 8, -15, -6, 23, 3, -5, 11, 40, -4, 3, -14, -20, -18, 7, 6, -31, -23, -37, 10, 22, -28, 5, 32, 20, 11, 6, 0, -18, -20, 4, 1, 5, -16, -52, -3, 10, 37, 8, 25, 10, 30, 6, -21, -18, -53, 1, 7, -9, -9, 
  15, 10, 20, -34, -14, -23, -4, 22, -12, -22, 13, 3, -7, 16, -50, 28, -18, 11, 9, 6, -26, 2, -9, 13, 1, -13, 14, -25, 8, 10, -46, 35, -22, -4, -19, -29, -17, 24, -38, 45, 6, -15, 21, 0, -4, -2, -54, -5, -23, -1, 56, -20, -10, 14, -12, -13, 8, -36, -12, -15, -13, 13, -44, -16, -3, -9, 99, -16, -1, -35, -21, -27, 7, -51, 15, -5, -6, -7, 4, 29, 25, -5, 52, -64, -25, -26, -10, -15, -11, -55, -14, -1, -9, 11, -37, 1, 16, 0, -6, -10, 12, -10, -9, -20, 4, -41, 30, 43, -5, 48, -33, 3, 25, -6, 37, -3, -7, 8, -32, -6, -9, -6, -3, -7, 2, 14, -9, 43, -20, 18, 50, 11, -16, -2, -15, -22, 12, -15, 17, -16, 2, 38, -25, 2, -4, -10, 64, -28, -27, -33, -31, -38, -5, -33, -9, -4, 1, 10, -21, 11, -12, -2, -25, 5, -23, 27, -33, -8, -6, -7, 9, 31, 5, 20, -63, 6, -17, 6, 39, 8, -32, -33, -16, -51, 2, -12, -16, -16, 11, 12, -22, -12, -6, -6, 25, 5, -48, -49, -25, -36, -2, -10, 1, -50, 12, 18, -44, -11, 10, 17, 77, -46, -21, -10, -11, -14, 2, -1, -2, 20, -11, 24, -25, -25, 9, -1, 56, -50, -21, -24, -11, -20, -4, -11, 26, 56, -3, 26, -12, -4, 12, 10, -26, -21, 16, -3, -1, -13, 6, 20, 19, 15, -11, 24, -11, -11, 
  14, -3, -15, 20, -2, 14, 37, -1, -28, 39, -19, -6, 19, 32, -34, -28, -19, 12, 60, -3, -38, 5, 1, 21, 12, -24, -44, -20, 7, -14, 13, 9, 3, -6, -18, 6, -22, -22, 6, -10, 2, 47, 5, 16, -17, 9, 34, 17, -10, -2, 2, 2, 22, -8, 31, 6, 9, 21, 15, 1, 0, 2, -17, 21, -19, 0, -13, 15, 4, 0, 54, 8, -1, 4, -29, -10, -1, 28, 6, 6, -37, 8, 5, 31, -13, 34, 14, 23, 6, 7, -45, -38, -17, -8, -7, -21, -12, 8, 2, -5, 19, -1, 1, 10, 1, 22, -6, -20, 33, 3, 2, -36, 1, 11, 2, 11, 10, -14, 10, -24, -5, 2, -7, 5, 0, -7, 1, -16, 2, -11, -18, -38, 5, -17, -36, 5, 8, -28, -32, -17, -8, 12, -1, 7, 4, 6, -30, 0, -18, 8, -39, -5, -9, 43, 1, -12, 16, -3, -32, 41, -14, 3, -17, -11, -38, 17, 7, -5, 9, 19, -20, -15, -7, 0, -9, -22, -21, 10, -11, 20, -20, -6, 11, 28, 11, -14, 4, -34, 13, 7, 0, 11, -26, -7, 40, 19, 23, 6, -24, 9, 14, 22, -15, 7, -1, 16, -2, -12, 2, 0, 29, 3, -5, -4, 4, 11, -15, 16, -39, -11, 14, -10, 3, -11, -30, 14, 49, -3, -17, 31, -4, 40, 8, 28, -48, -34, -4, 6, -8, -23, -15, -5, -10, 8, 23, -4, 19, -2, 6, 9, -53, 17, 9, -7, 6, 23, 
  13, 4, 0, -19, -22, -7, 6, -1, -15, -9, -6, 18, -8, 7, -16, -6, -7, 7, 2, -21, 2, -12, -17, -1, -6, -3, -12, -5, -1, 8, -16, 11, 2, -3, 8, -11, -10, -9, 0, -17, -1, -12, 1, -8, -1, -1, 2, -15, -7, -3, -4, -9, -19, -15, 4, -15, 6, -10, 1, -16, 6, -12, 6, 0, 1, -2, 7, -11, -4, -9, -17, -32, -11, 2, -6, -10, -9, -6, 1, -8, -23, -8, -4, -14, 1, -18, 8, -1, 13, -3, -18, -15, -1, 8, -15, -14, 9, -15, -1, -11, -12, -5, 0, 2, -6, -9, -10, -28, -10, -1, -10, -11, -12, -15, 2, 0, -5, -13, -12, -20, 13, -5, -9, -26, 3, -2, -17, -11, -3, -14, 9, -13, -13, -9, -15, 0, 2, -15, -4, 0, 9, -6, -14, -10, -11, -2, 1, 10, -16, -10, 1, -10, -8, -14, 9, 1, -3, 2, -8, -6, 25, 4, 6, -13, -26, -9, -9, 5, 2, 2, 18, 2, 2, -5, -31, 5, -17, -9, 2, -8, -6, 2, -17, -13, 8, -15, -3, 5, 7, -1, -29, -16, 6, 7, -9, -14, -8, 2, -10, -6, 6, -3, -9, -11, -13, 2, 8, -8, -8, -8, 4, -16, -11, -20, 8, -9, -13, -10, -10, 3, 9, 4, -11, 7, -13, -1, 4, -3, -25, -8, -31, -8, 3, 2, -7, 1, 8, 16, -13, 1, 6, 8, -2, -7, -8, -22, -8, -6, 0, -14, -3, -11, 3, -12, -30, 4, 
  -33, 3, 8, -7, 19, -14, 4, 11, -24, -7, -66, -7, 2, -6, -20, -42, -50, -7, -23, 36, -27, -25, 24, -36, 19, -5, -54, -39, -5, -7, -4, -46, -35, -8, -9, -27, -6, -11, 8, 45, -28, 33, -24, -54, -6, 1, 4, -40, -54, 3, -4, 21, -13, -8, -17, 2, 0, 1, -13, -44, -14, -14, 9, -27, -5, -10, -1, -4, -13, -30, 31, -43, 29, 12, -19, -46, -11, 9, -20, -29, -33, -14, -1, -19, -71, -38, -23, -36, 12, -29, -37, -15, -8, -3, 11, 1, -8, 5, -10, -16, 18, -17, 13, -34, 6, 1, -10, -35, 8, 11, 12, -16, -34, 4, 6, -1, -36, 0, -23, -17, 5, 18, -51, -35, 5, -3, 12, -27, -25, 4, -11, -9, 2, -27, 12, -4, 2, -7, 5, -44, 8, 14, 4, -21, -39, 9, -12, -5, -47, -16, 36, 18, 9, 75, 8, -12, -5, -17, 0, -5, -39, 1, -4, -28, 38, 19, -16, -12, 44, 15, -12, 17, -1, -8, 0, -19, -26, -9, -8, -28, 41, 9, 2, 47, 31, 6, -39, -22, -5, 2, -19, -14, -8, -8, 6, -21, -28, -20, 42, -17, 16, -28, -24, -37, 1, 8, -5, 9, -20, -7, 20, -25, -30, -4, -12, 1, -6, -5, -16, -3, 6, -2, 31, -20, -5, 4, -9, 24, -5, -25, -2, -27, 9, 12, 2, -23, -5, 0, 54, -24, 6, 1, 15, 34, 0, -10, 23, -24, -29, 6, -62, -31, -12, 1, 18, 23, 
  -23, 15, 1, 8, 5, -6, 21, 27, 8, 22, -19, -73, 9, -12, -19, -23, -45, -4, 52, -14, 2, -20, -22, -14, -17, 21, -20, -38, 0, 10, 29, -34, 0, -12, -8, -3, 26, -37, 4, -37, 9, 30, -8, -12, 2, -5, 10, -9, -4, 12, -16, -5, 4, -18, 55, 13, -1, 15, 5, -16, -11, 22, 26, -45, 14, -4, -32, 17, 26, 34, 55, 8, -29, 11, 9, -37, 5, 9, -5, -47, -34, 8, 10, 13, -25, 14, 3, -28, -23, -10, -30, -74, -7, 20, 22, -57, -23, -4, 2, -35, 0, -20, -14, -8, -4, 7, 9, -5, 12, -1, -12, -33, -9, -2, -1, -37, -14, -21, 5, -29, -15, 31, 6, -5, -7, -7, 47, -26, -8, -6, -24, -4, -3, -38, 15, -35, 15, 34, -46, -23, -20, 9, 51, -15, -9, 1, 5, 10, 0, 7, 21, 21, 11, 32, 8, -13, 2, 15, 22, -17, -7, 5, 11, -10, -3, 55, 38, 8, 19, 26, 4, -30, -4, 2, 35, -21, -18, -11, -18, -27, -14, 41, -2, 22, -5, 22, -12, -39, 17, -24, 11, -17, -43, -6, 3, 28, -36, 14, 19, -4, 20, 5, -36, -40, 19, 26, 18, -19, -39, -3, 1, 8, -38, -5, 11, -8, -20, -21, -44, -64, 0, 12, -5, -47, -24, -10, 66, -11, -33, -7, 0, -10, -4, 9, 0, -53, 7, -3, -9, -11, -33, 5, -18, 20, 70, 21, 2, 5, -27, -1, -14, -21, -14, 15, -38, 28, 
  -12, -11, -3, -10, -6, -14, -5, -3, -7, -6, -15, -13, 7, 8, -10, 0, -9, 6, 10, -3, -2, 7, 4, -14, 9, -3, -14, -13, -10, 11, -7, -14, -12, 7, -1, -8, -10, -12, 8, -12, -2, -2, -6, -5, 9, -8, -14, -11, 2, -11, -6, -14, -8, 3, -12, -8, 2, -12, -10, -12, -3, -1, -14, 3, -1, -12, 0, -12, 3, -3, -2, 3, 2, -13, -2, -11, -15, 4, -7, -8, -6, -1, -1, -7, -12, -9, -10, 2, -2, -12, -16, -6, -5, -9, -8, -7, -9, 1, 9, -14, -13, 5, -3, -9, 4, -6, 2, -4, -7, 6, -5, 0, 9, 0, 0, -8, 10, 1, -8, -12, -8, -13, -13, -15, -11, 6, -6, -4, 1, -10, -11, -4, -1, -8, -9, 7, 0, -18, 3, -2, -5, 2, 4, -1, -5, 2, 8, -8, 2, 2, -17, -19, 0, -33, -5, 4, -7, -5, -20, -10, 0, -4, -2, -10, -7, -13, -12, -14, 6, -23, -8, -10, -8, -11, -11, -11, -12, 3, 5, -4, -16, 1, -8, -4, -11, -8, -10, -9, 1, 2, -3, -8, 2, 10, -14, -9, 3, -2, 6, -3, -4, 3, -7, 5, 8, -2, 4, -1, -10, 6, 4, -11, -8, -7, -11, -8, 7, -12, -2, -4, -8, -13, -4, -8, 3, -10, 4, -7, -14, 2, -2, 2, 0, -7, 11, -6, -5, -1, -5, -4, -1, -4, -13, -5, -12, 0, 6, -9, -3, -1, -5, 0, 9, -11, 0, -17, 
  -5, 2, 10, -23, -64, -32, -3, -29, -3, -11, 13, -8, 5, 14, -37, 66, -26, -1, 18, -17, -35, -39, -19, 8, -19, -21, 11, -12, 6, 15, 24, 5, 14, 4, 16, -4, -24, -9, -43, 0, -15, 4, 42, -14, 3, 26, -26, 13, 24, -2, 33, -6, -8, 7, -36, -24, -18, -11, 50, 20, -9, -5, 25, 14, -36, 13, 9, -24, 16, -24, -22, -6, 10, 5, -9, 15, -8, 3, 1, 20, -15, -11, -4, -26, -19, -38, -7, -21, -11, -21, -11, -10, 11, -12, -1, 8, 5, 3, 4, -20, 19, -21, -13, -20, 7, 12, 4, 24, -4, 35, -11, 41, -6, 12, 47, 27, -55, -38, -18, -15, 31, -2, 31, 36, -14, 24, -11, 24, 42, -5, 32, -26, -33, -10, -21, -7, 2, -20, 4, 1, 5, 34, 6, 19, -1, 4, 36, -42, -36, -15, -1, -14, -15, -37, -32, -25, 18, 42, -3, 2, 49, -1, -17, -22, -28, -46, -19, -10, -22, -15, 13, -7, -1, -13, -6, 37, 18, 13, 18, -8, -6, -16, -27, -55, -20, -31, 60, 31, -7, 19, -37, 56, 31, 6, 3, -32, -27, -42, -39, -45, -11, 9, 58, 19, -22, -5, -12, 56, 1, 4, 14, -46, -23, -20, -28, 6, -3, -24, 13, 22, 0, 8, 26, 12, 11, -5, -1, 18, -33, 19, -49, 33, 24, -3, 13, 51, 4, 31, 15, 28, 1, -10, 30, -5, -1, 14, -18, 6, -9, 1, -6, 10, 5, 20, 4, 62, 
  31, -12, 16, 1, -13, -11, -3, -5, -12, -5, 56, 40, 7, -13, -46, 38, 16, -3, -22, 16, 12, -19, -10, 27, 5, -8, 8, 18, 11, 47, 41, -4, -28, 8, 13, -32, -13, -25, -2, -15, 9, -30, 15, -19, -5, -19, -35, -19, 1, -10, 23, -9, 19, -3, -45, -17, 1, -39, -1, 9, 13, -20, 6, 3, -3, -3, 48, -24, 19, -28, -18, -16, -9, -17, 5, -10, 13, 21, -29, 19, 12, 2, -8, -19, -7, -52, -26, -24, 4, -16, 1, 1, 5, -13, 6, -9, 5, -4, -5, 46, 32, -31, 33, -33, -4, 8, 0, 3, 9, 11, 7, -2, 1, -2, 28, 51, -3, -26, 12, -33, -11, 6, 39, 18, 8, -1, 4, 25, 3, -9, 33, -22, 11, -10, 10, 12, -5, -10, 12, 21, 3, -9, -29, 44, 15, 9, -14, -28, -3, -18, -29, -21, -7, -42, 19, 35, 0, 45, -33, 8, 15, -7, -1, 3, -25, -15, -15, 7, 11, -6, 14, 19, -3, 13, -24, 20, -8, 4, 15, -7, -18, -18, 7, -71, 4, -22, -8, 20, 8, 13, -8, 9, 1, -5, 35, -18, -36, -41, -14, -54, 9, -1, -19, 9, -3, -1, -26, 36, 9, -1, 25, -7, -66, -38, -2, -66, 10, -6, 21, 0, 8, -5, -36, 38, 25, 5, -16, 22, 7, 8, 5, 7, -12, 24, 33, 33, 1, -6, 68, 19, -8, -2, 19, 6, 19, -7, 8, 4, -5, 11, -3, 43, 9, -5, -15, 0, 
  21, 0, 26, -37, -24, 4, -8, -27, 1, -24, 45, 28, -8, 11, -41, 48, 27, 0, 0, -20, -10, -13, -2, -22, 7, -12, 37, 20, 1, 23, -33, 66, -19, 3, 1, -22, -16, -6, -36, -4, -14, -28, 16, 1, -9, 15, -15, -5, 32, -11, 14, -13, -8, -13, -13, 4, 12, -43, 14, -34, -3, 9, -5, 1, -5, 6, 6, 9, -2, 19, -22, -7, 12, -52, 32, -6, -1, 8, -46, 41, -9, -4, 8, -6, -3, -10, -23, -39, 11, 4, -3, -7, 5, -10, -22, -10, 10, -11, -1, -1, -22, -20, -1, -25, -12, 5, -4, -4, 2, -19, 7, 40, -4, 13, -33, -31, -30, 11, -23, 8, 6, -36, -14, -17, -1, -3, 27, 1, 4, 11, -7, 2, -42, -4, 6, -28, -9, -15, 18, -2, -3, 0, -13, -28, 12, -3, -13, -14, -7, -10, 4, -2, 7, 0, 4, 20, 2, 36, -15, 22, 10, 9, -11, 8, -15, -1, 6, -14, 3, -11, -31, -21, -4, -18, -39, 4, -10, 7, -17, -18, -3, 1, 14, -9, -5, -11, -20, -29, 2, -5, -26, -30, 8, 1, 12, -23, -8, -19, -6, -10, -5, -15, 20, -26, -9, -11, -16, 6, 13, 5, -3, -11, -31, 14, -13, 43, -5, -1, -14, 13, -4, 1, 1, -9, 2, -1, -13, 30, -3, 21, -8, -4, 12, 26, -10, 6, -14, -11, 18, -16, 25, 8, -18, 4, -11, -4, 8, 5, -4, 6, -11, 0, -2, -2, -1, -3, 
  18, 11, 25, -24, -9, 0, -12, 5, 6, 18, -29, 20, -11, -3, -2, 15, 39, -6, 0, 10, 17, -29, 4, -17, -4, -25, 23, 11, -4, 25, -7, 32, 24, 5, 9, -21, -15, -20, -10, -57, -2, -2, 25, 16, 8, 23, -24, 14, 12, 0, 10, -16, -12, 0, 1, -21, 10, -8, 3, 36, -11, 6, 0, -9, -6, -4, 29, -10, -1, -26, -39, -4, -7, 1, 2, 6, 1, 0, -18, 36, 9, 3, 38, 10, -19, -14, -33, -19, -14, 11, 1, 4, 12, -7, -34, 20, 5, 3, 11, 1, -7, 5, 23, -1, -4, 29, 12, 18, -5, 21, 11, -3, 12, -6, 2, -1, -26, -20, 30, -35, 10, 16, -11, 12, -1, 8, 21, 7, -11, 15, 21, 13, -6, -18, -3, -8, 4, 7, -4, 9, 9, -4, -21, -21, 11, 11, 4, 2, -13, -3, 2, -4, 12, -35, 4, 2, -11, 41, -21, -5, -8, 7, -34, -15, -15, -33, -13, -34, -4, -33, 11, -5, 0, 4, -39, 8, 29, 0, -27, -2, -17, -28, 6, -38, 16, -45, 13, 31, -7, 34, -37, 30, 26, -7, 2, -33, -6, -18, -13, -21, 14, -35, 18, 7, 12, -15, -39, 20, -1, 6, 27, -14, 6, -18, -18, 3, 1, -20, 21, 3, -2, 16, -77, 36, -4, -2, -3, -21, 15, -1, -20, 8, 8, -11, 19, 18, -8, -16, -35, 8, 33, -1, -22, -3, 22, -12, -23, -7, -2, 15, -17, 0, 24, 9, -8, 8, 
  -5, -2, -23, 0, 3, -10, 10, -20, -1, -33, -7, 18, 4, 0, 1, 4, -30, -2, -7, -3, 25, -30, -5, -10, 9, -5, -26, -36, 0, -5, 24, -30, -10, 9, -3, -24, -16, -9, -3, -6, -13, -9, -7, -27, -14, -11, 13, -18, -4, 4, 7, -22, -32, 4, 12, 0, 6, -8, -10, -34, -2, 8, -20, -19, -29, -3, -8, -3, -25, 14, -7, 15, -3, -23, -28, -22, -1, -4, -6, -24, -32, -13, -4, 16, -27, -26, 0, -10, 7, -4, -41, -14, -6, -12, 4, -28, -10, -10, 4, -24, -3, -30, 3, -26, 2, -19, -31, -16, -8, 6, -30, -19, -33, -4, -16, -17, -24, -2, 4, 3, 2, -9, 17, -32, -12, -7, -31, -27, -27, 9, -6, -6, -9, -30, -5, -3, -2, -26, -23, -35, -9, 7, 6, -31, 12, -8, 3, -11, 5, 17, -14, -16, 0, 11, -22, -6, -8, 12, -13, 4, -14, -5, 5, -4, 1, -34, -8, 1, -14, -11, -25, -19, -7, 0, -14, -21, -28, -9, -13, -6, 1, 24, 8, 13, 0, -14, -42, -31, -13, 1, 5, -32, -37, -2, 9, 5, 14, 1, 15, 6, -6, 10, -12, -34, -10, -2, 4, -34, -1, -9, -10, -7, 9, -22, 3, -22, -17, 12, 2, -12, 8, -6, 5, -19, -35, -3, -5, -28, -20, -20, -19, -14, 4, 5, -21, -26, -1, 1, -20, -19, -42, -9, -25, -12, -17, -5, -2, -14, -5, 8, 7, -10, 2, 11, 7, -6, 
  -38, 6, 6, 17, -14, 21, 40, 32, -3, 28, -67, -33, 4, 13, 27, -63, -17, 7, 16, -2, -16, -4, 6, 16, -8, -3, -22, -47, 14, 15, 16, -33, -24, -10, 27, 11, -18, -23, -9, 12, 3, 23, -19, 5, -6, 36, 15, -17, 1, -5, 24, -5, -6, -16, 3, -7, -9, 30, -22, 18, 6, 8, 19, -21, -26, 3, 2, 7, -16, -5, 9, -6, 13, 36, -33, 0, 3, 3, -12, -16, -43, 10, -2, 17, 48, 31, 6, 13, -4, 17, -28, -70, -5, -7, -4, -33, -1, -6, 31, 29, -3, 17, -26, 46, 10, 5, -23, -34, -1, 14, 1, 3, 13, 13, 76, -2, 13, 19, -13, -6, -10, 10, -12, 3, -14, -17, 22, 5, -46, 0, 3, 42, 21, 24, 0, 34, 5, 15, -48, -8, -4, -8, 54, -13, -24, 11, -9, 10, 9, 32, -3, 30, 28, 50, -7, -30, 0, -20, 19, -10, -12, 4, 9, 6, -16, 38, 19, 10, -1, -26, -21, -10, -21, -9, 35, -17, -24, 11, -39, 34, -3, 9, -10, 15, -8, 20, -21, -13, -9, -30, 15, -23, -33, 12, 6, 18, 21, -14, 18, 4, 12, 12, -50, -1, 4, 9, 8, -17, 1, 11, -6, 18, -16, 15, 29, 6, 1, 10, -41, -4, -3, 0, 6, -11, -30, 14, 15, 1, 28, 16, 9, 26, 21, 9, -33, -37, -16, -2, -4, -46, -30, 8, 26, 28, 12, -3, 34, -4, 0, 16, -31, -8, -20, 25, -18, -34, 
  -20, 2, 0, 2, -8, -18, 4, -1, 1, -5, 20, 20, 7, -8, -12, 16, -8, -5, 9, -19, -25, -29, -1, -12, 5, -21, -34, 5, 4, -6, -30, 1, -27, 9, 7, -5, -30, -21, 3, 7, -6, -15, 14, 22, -2, 8, -16, 37, 20, 4, -15, -29, -30, -12, -8, -15, -16, -3, 17, 0, -1, -11, -4, 3, -26, -13, 5, -2, -27, -31, -5, -18, -9, -33, -29, -4, 6, -4, -2, -15, -16, 3, -4, -13, 0, -21, 8, -5, 2, 29, 27, 1, -10, 5, 16, -17, -2, -5, 7, -4, -23, -20, 6, -22, -8, 5, 9, -23, 2, 1, 0, 7, 0, -1, -14, -21, -55, -6, 3, -20, 7, -17, -39, 9, -1, -2, -13, 1, 5, -1, -4, 3, -15, 6, 1, -11, 4, -11, 44, 26, -9, 9, 5, -12, 28, -15, 0, -5, -30, -7, -1, -23, 7, -15, -35, 3, 7, -5, -28, -11, -11, -12, -13, -27, -10, 0, -6, -16, -5, 2, 12, -8, -14, -6, -39, -7, 17, -12, 0, -35, -5, -14, -3, -21, -2, -16, 13, -11, -14, -12, -24, -12, 0, 5, -9, -17, -8, -18, 5, -12, -9, -26, 11, 13, 0, -12, -18, -3, 22, -8, -4, -7, 2, 15, -12, -21, 4, -11, -12, 1, -5, 7, -7, 19, -11, -2, -10, 15, 9, -5, -6, -12, -8, 12, -17, -20, 5, -7, -17, -4, 10, -14, -14, -19, -6, 2, -6, -6, -2, -37, 11, 28, -6, -9, 4, -18, 
  -8, 7, -4, -1, -19, 9, 10, -16, 5, 17, -29, -21, 15, 25, -15, -50, -26, 2, -16, -9, -17, -22, -21, -13, -1, 8, -22, -20, -4, 5, 24, -21, -35, 10, 6, 1, -19, -18, 17, 5, -2, 38, -27, -5, 3, -8, 1, -28, -33, 12, 0, 9, -24, 16, 9, 15, 1, 0, -47, -14, 10, 16, -20, -6, -25, 2, -8, -11, -12, -25, 11, -6, -3, -1, -36, -15, 2, 15, -26, -25, -3, 5, -26, -11, 1, 1, -28, -14, 2, 48, -20, -11, 14, -12, -13, -53, -20, 8, -7, 4, 35, 6, -12, 2, 15, 9, -4, -9, -12, -9, 40, 6, -19, -9, -22, -18, -25, -17, -12, -26, -6, 30, -12, 1, 3, -11, 7, 6, 6, 1, -17, -11, -17, -9, 11, 1, -2, -2, -12, -2, 11, 1, 5, 9, -11, -2, 1, 8, 32, 11, -10, 16, -6, 20, -29, -23, -6, -5, 7, -11, -18, -3, -4, 14, 20, 23, 18, 4, 3, 15, -19, -13, -7, -13, -13, -40, -13, -3, -7, -24, -13, -17, 4, 2, 5, 13, -13, -5, 10, -16, -11, -4, -23, 7, -20, -20, -20, -26, 16, -14, 2, -6, -8, -33, 2, 1, -4, 10, -15, -10, 20, -16, 0, 0, -1, 0, -18, 9, -38, -26, 9, 3, 16, -30, -31, -4, 9, 12, 17, 8, -9, -10, 13, -8, -5, -39, -3, -1, 6, -39, -61, -12, -13, -36, 17, -3, 11, 5, -12, 41, -23, -9, -2, -1, -5, -29, 
  -2, 8, -6, -19, 12, -9, 15, -27, -13, -14, 0, -2, 12, 7, 19, -21, -5, -6, 16, -12, -5, -1, 0, -4, 8, -8, -35, -21, -9, 6, 16, -19, -20, 7, 2, -25, -11, -23, 14, -2, 6, -8, -26, -26, 12, 2, 10, -12, -16, 3, 8, 10, 4, 4, 2, -6, 16, 1, -13, 1, -1, 4, 0, -11, -8, -1, -22, -14, -18, -16, -10, 5, -7, -3, -23, 0, 5, 3, -2, -39, -18, 6, -12, 5, -18, 2, 2, -19, -9, 17, -13, -15, -6, 7, -4, -34, -2, 9, -14, -17, 11, 8, -2, 8, 7, -11, -4, 5, -10, -2, -1, -11, -7, -4, -24, -4, -4, -7, 7, 7, -2, -7, -20, -3, -8, 9, -16, 2, -19, -7, -7, 1, -14, 4, -5, 4, 18, -16, 0, -8, -12, 6, 1, -1, -22, -6, -15, -9, -25, 31, -17, 21, -5, -7, 0, -7, 3, -6, -15, -4, -28, 7, 6, -9, -11, 5, 6, 15, 7, -17, -7, -17, 5, 11, -10, -24, -17, -5, 8, -14, 1, 15, -28, -15, 8, -20, -18, -20, -4, -11, -13, -1, 4, -5, -17, -9, -21, -3, 3, 12, -6, 5, -7, -12, 10, 9, -8, -12, -10, 7, 14, -6, 15, -10, -13, -3, 6, 3, -14, -19, 0, 15, -9, -16, -15, 8, 22, 4, -14, 4, -2, -14, 9, 8, -5, -17, 12, 12, -9, -9, -48, -10, -26, -10, 14, 3, 3, -2, -2, -6, -27, 5, -9, 10, 15, -16, 
  -54, 7, -4, 3, -29, -2, 36, 15, -27, 23, -35, -76, -8, 16, 8, -41, -34, 18, 29, 24, 38, 0, 21, 29, -5, 34, -36, -88, 33, 13, 24, -54, -44, -10, -45, -29, -18, 11, 21, 14, 3, -22, -33, -16, 4, -14, 3, -29, -18, 10, -6, -18, 2, 10, 35, 27, 25, 35, -19, 18, 12, 11, 10, -42, -4, -6, -48, 23, -7, -25, 39, 24, 56, 7, -53, -54, 11, 22, -9, -52, -33, -22, 2, 27, 1, 3, 40, 11, 26, 13, -2, -26, 31, 19, -15, -53, 6, -15, -8, 7, 18, 56, -5, 67, 58, 3, -26, -59, 25, 30, -14, 6, 1, -23, 12, 18, 37, 25, 2, 49, 8, 32, 10, 6, -6, -22, 13, -2, -89, -2, -22, 32, 15, 21, 32, 37, 2, 0, -50, -43, -7, 7, 34, -13, -15, -17, -38, 34, -15, 17, -6, 57, 27, 17, 40, -48, 57, 29, -26, 26, -18, 22, -2, -1, 15, 33, 36, -9, -11, 4, -14, -28, 15, -3, 31, -8, -56, 0, -22, 35, 11, -1, 52, 26, 55, 37, -33, 0, 21, -30, 46, -31, -25, 2, 33, -12, 5, 7, 16, 10, 83, 7, -44, -29, 38, 25, 40, -18, -48, 6, 7, 12, 15, 7, 33, 25, 6, 38, -47, -68, 7, 51, 2, -28, 22, -20, 33, -23, 20, 4, 15, 13, 37, -3, 0, -25, 15, 53, -6, -6, 43, -9, 13, -4, 45, 2, 42, -1, 45, 0, 31, 37, 13, 9, 24, 37, 
  -12, 10, 4, -29, -15, -17, 0, -27, -7, -17, -26, -40, 6, -7, -16, -29, -3, -11, 7, 18, 1, -32, -12, -37, -3, -7, -27, -16, -14, -7, -19, -10, -2, -15, -8, -8, -15, -2, 11, -37, -14, -7, -21, -38, -5, 8, 2, -19, 5, -14, -6, 15, 34, -26, -11, -36, -11, -4, 5, -2, -9, -10, 3, 0, -6, -7, -10, 20, 26, -19, -19, -24, -13, 20, -17, 9, -13, 4, -31, -2, 13, 9, -5, -8, 17, -28, -15, -10, 2, 11, -1, -19, 0, -3, 1, 7, 0, -10, 3, 3, -15, -25, -12, -22, -12, 7, -6, 32, -1, 1, 6, 16, 25, 12, -14, -8, -18, -8, -18, -30, -16, -22, 25, -19, -1, 5, -5, 18, -15, 6, 4, 4, 9, -25, -15, -14, -9, -13, -20, -10, -8, -6, -8, 4, -13, -14, 4, 10, 22, 12, 4, -5, 8, -5, -20, -16, 6, 8, 7, -26, -2, 7, 5, 25, 27, 0, -30, -35, 7, 33, -22, -24, 8, 1, -15, -22, -6, 5, 13, -11, -23, -12, -9, -24, 4, 5, -7, -19, -14, -9, -15, -32, 8, -14, -11, -22, -13, -29, 1, 3, 9, -10, -15, -26, -9, 14, 18, 6, -19, -8, -14, -4, 17, -7, -5, -36, 6, -12, -17, -11, -10, -6, 8, -11, -17, 6, -7, 39, -19, -20, -1, 1, 5, -14, -34, -17, 8, -2, -14, -14, -7, 10, -17, -20, -17, -28, 3, -14, 9, -14, 5, -16, -9, -10, 7, -25, 
  37, 13, 12, -26, -31, -13, 1, -31, -40, -8, -12, 24, -4, -28, -26, 39, 0, -7, -12, -2, -18, -16, 3, 2, -23, -31, -6, 11, 2, 22, -24, 26, 34, 5, -18, -13, -30, -40, -14, -29, -22, -16, 23, 17, 8, 7, -13, 20, -1, -9, 9, 0, -39, -23, -12, 0, -22, -3, 9, -12, 5, -12, -4, -26, 1, -6, 3, -55, -28, -40, -9, -37, -8, -29, 20, 14, -5, 3, -50, 29, 30, 0, 14, -21, -13, -9, 15, -20, -12, 6, -16, 3, 6, -5, -26, 12, -9, 1, 32, 24, 13, 14, 12, -15, -17, 21, -26, 13, -10, -3, -18, -21, -25, 11, -34, -21, -2, -5, 3, -16, 29, -23, -8, 9, 3, -12, -30, -1, -3, 3, -6, -16, -23, -3, 2, -37, 7, -11, 7, 8, 4, 2, -54, -14, -14, -5, 12, -3, -42, 19, -7, -1, -1, -15, -13, 9, 3, 27, -32, -43, -5, -6, -30, -10, -40, -1, -45, 12, -9, -62, -17, 0, 7, -13, -59, -25, -13, -2, -3, -13, -25, -3, 1, -10, 4, -30, -7, 33, 18, 10, -31, -25, 8, -3, -51, 8, -11, -19, -2, 0, -20, -8, -7, -39, -11, -19, 0, -28, -3, -3, -27, -22, -5, -12, 11, -15, 12, -50, -6, 3, 8, -17, -41, 1, 8, -8, 16, -5, -30, -29, -16, -6, 8, -37, -11, 40, 15, -12, 8, -11, 5, 9, -13, 2, -21, 12, 3, -9, 16, -14, 0, 1, 8, 4, 29, 3, 
  -5, 2, 55, 18, 4, 13, 36, 23, -13, 29, -14, -63, 7, 22, -6, -5, -33, 9, 8, 11, -27, 21, -8, 9, 5, -10, -7, -40, 2, -9, -6, -30, -18, 6, 26, -2, -4, -1, -13, 13, -5, 14, -19, 0, 15, 9, 5, -21, -16, -5, 14, 5, 8, 42, -4, 46, 7, 14, -9, -26, 0, -11, -13, -25, -15, -3, 23, 24, 6, 21, 55, 46, 1, 11, -16, -40, 14, 17, 9, -25, 0, 8, 16, 15, 32, 50, -28, 33, 7, 8, -3, -6, -14, -16, 10, -9, -2, -4, 31, 18, 27, 65, -16, 55, 9, 8, -23, 7, 9, 14, 0, 19, -24, 0, 82, -6, -22, 12, 4, 31, -7, 15, -34, -21, -8, -2, 28, -10, -37, -6, 18, -8, -1, 35, 8, 22, 23, -9, -20, -26, -11, 5, -6, -15, 4, 6, -21, 20, 26, 32, 7, 34, -7, -2, -8, -20, 9, -1, -26, -1, -8, 7, -10, -1, -5, 48, 23, 24, 10, 6, -41, -36, -11, 2, 1, -53, -31, -12, -17, -13, 25, 27, 17, 11, 11, -4, -34, -8, 6, -11, 3, -42, -3, 9, 15, 1, 14, 12, -4, 23, 9, -12, -22, -10, -1, 20, -18, 38, -26, -4, 13, 6, -31, 26, 24, 13, -6, 17, -39, -14, 19, -27, 2, -34, -13, 7, 18, -2, 14, 1, 29, 6, 6, -15, -22, 4, 7, -6, 0, -36, 1, 8, 8, 44, 11, 32, 15, 20, 3, 12, 0, -8, 1, 4, -11, -7, 
  40, -23, 26, -16, -5, 24, 23, -27, -7, -12, 77, 26, 4, 47, -34, 78, 65, -11, -5, -39, -47, -28, 22, -28, -28, -5, 47, 87, -5, -8, 24, 96, 70, -9, 0, -51, -58, 6, 1, -21, -23, -10, 31, 33, 42, -41, -47, 24, -6, -9, 23, -54, -25, -7, -21, -34, -25, -30, 21, 36, 7, 28, -13, 12, -34, -9, 1, -7, -55, 8, -4, -12, -5, -13, -23, 25, -6, -7, -27, -14, 7, 2, 24, -13, -31, 19, -8, -34, 12, -61, -22, 4, 5, 17, -59, -23, 0, -2, 7, -39, 24, 4, -39, -13, -14, -40, 0, 29, 1, 8, -56, 12, -11, 10, -26, -67, -36, 2, 13, -2, -17, -39, -58, 12, -3, 1, 4, 69, -13, 13, 19, 26, -44, 47, 10, -17, -79, -7, -12, -27, -6, -11, -34, 49, -1, -10, 3, 4, -46, 0, 28, -28, 5, 15, -28, -5, 2, -15, 11, -72, 26, 4, -14, -33, 5, 39, 13, 5, -57, 9, 18, -36, -12, -15, -24, 10, 14, 2, 19, -37, 11, 6, -31, -2, 7, -61, 19, -46, -1, 5, -32, 23, -20, -2, 14, -90, -38, -20, -37, -28, -20, -27, 10, -32, 21, 21, -7, 28, 1, -12, 40, 3, -2, -18, -1, 21, -2, -14, 50, 27, -5, -14, -7, 4, 31, 0, 18, 1, 29, 13, 10, -42, -38, -7, 18, 31, -1, 4, 23, -25, 8, -15, -5, -29, -19, -12, -1, -19, -18, -29, 37, 47, 23, 4, -2, 34, 
  -30, 2, -10, -1, 28, 15, -9, -14, 3, -9, -26, -43, -1, -12, 13, -53, -23, -2, -12, 29, -19, 32, 28, 9, -9, -28, 11, -43, -13, 7, -18, 5, -4, 10, 33, -44, -49, -18, 7, 23, -1, -25, -13, -9, -2, -7, 3, 3, -27, -24, 5, 28, 21, -41, 64, -25, 6, -3, 1, -3, -4, 29, 53, -7, -23, -8, 24, -3, 16, 41, 46, 22, -9, 50, -29, -44, 4, -2, -25, -36, 13, 0, 3, 28, -6, -29, -3, 3, -10, -21, 25, -36, 4, 9, -5, -14, 15, 1, 14, -31, -9, -16, 17, 11, -6, -47, 10, -36, -11, -3, -22, 11, 7, 4, -13, -28, -50, -6, -44, -21, 5, 24, 2, 20, 5, 0, -48, 9, -13, -9, 15, -21, -40, 2, 25, 14, 6, -11, -9, -18, -8, -19, 43, -19, -30, 2, 15, 13, 27, -26, 64, -24, -3, 12, -3, -5, 7, -25, -16, 6, -45, 11, -8, 57, 0, -10, -21, -26, -4, 28, -32, 0, 3, -28, -21, -31, 0, 16, -34, -58, 23, -3, -27, -1, -10, -13, -23, -17, 3, -23, -5, 12, -30, -4, 29, 1, -48, 12, 17, 57, -6, -25, -8, -32, -9, -9, 10, -1, -26, 1, 20, 78, 12, 26, 19, 31, 7, 34, -40, -36, 1, -10, 6, -17, -23, -3, 14, -44, -3, -28, 46, -44, -9, -31, -25, -56, -6, -22, 32, -21, -39, 5, 17, 27, -22, 0, 31, -3, -4, -5, -12, -34, 8, -10, 12, -4, 
  4, 7, -2, -57, -30, -37, -11, -27, -14, -11, 21, 1, 12, -14, -5, 18, 2, -2, 14, -32, -25, -47, -12, -36, -2, -33, -5, 44, 3, 19, -5, -13, 2, -7, 2, -10, -14, -6, -9, 34, 2, -1, -19, 30, 1, 11, -44, 23, 70, -7, 0, 10, 22, -11, -25, 12, -3, -41, 30, 31, 0, 6, -8, 41, -6, -12, -6, -30, 11, 4, 0, 22, 3, 1, -13, 8, 1, 4, 50, 70, 6, -5, -36, -20, -9, 3, 0, 34, -2, -10, 50, 1, 6, 2, 9, 52, -11, -11, 15, -22, -19, -20, -5, -31, 9, -2, 16, -23, 3, 24, -18, 33, 48, -10, 7, -28, -28, -35, 9, -9, 4, 4, 4, -2, -2, 13, 31, 52, -21, 4, -6, -13, 10, -21, -2, -23, -6, 17, -7, 6, 7, 7, -11, -24, 18, -16, -30, 12, -17, -12, -1, -23, -4, -31, 4, 97, -4, -16, -66, 43, 10, -12, -5, -29, -16, -33, 1, 5, 2, -29, -8, 20, -8, 19, -53, 17, 9, -10, -10, 17, -26, -33, 7, -15, -12, 17, 1, 64, -7, 14, 13, -18, 0, 2, 23, -41, -24, 22, 24, -4, 5, -2, 31, -3, 1, 30, -8, 5, 1, 8, 16, -9, 0, -28, -2, -30, 9, -7, 46, 5, -3, -3, 41, -6, 54, -3, 15, -34, -43, -65, 1, -48, -13, -1, 64, 46, -3, -3, 35, 44, -11, -6, 2, -48, -7, -14, 0, -8, -4, -20, -12, 12, -13, -1, 11, 28, 
  -56, -15, 14, 15, 61, -58, 10, -17, -29, 48, -17, -70, -10, -15, 41, -71, -26, -4, -11, 0, 32, -22, 14, -14, 2, 41, -5, -45, -1, 8, 3, -42, -17, 6, -10, 41, 1, -2, -15, 13, 2, 15, 19, 32, 7, 9, 37, -2, -8, -8, -7, 14, 10, -26, 14, 15, -1, -13, -26, -37, -6, 20, 24, -32, -20, 0, -12, 6, 19, -18, 7, -16, 2, 18, -14, -34, -12, 8, 14, -34, -18, 5, 5, 33, 5, -43, -15, -45, 3, 26, -35, 6, -5, 27, -30, -2, -3, 6, -18, -11, -21, -39, -30, -16, 1, -11, -1, -27, 0, 22, 8, -22, -19, 4, 16, -11, 28, -36, 7, 7, -3, 31, -22, 3, -3, 1, 45, -9, -44, -10, 2, -1, 7, -58, 26, -21, 2, 39, -21, -49, -7, 12, 16, -2, -32, -11, -20, 11, 6, -26, -2, -21, -1, 30, -28, -56, -1, -6, -4, -52, 8, 15, 2, -6, 12, -13, 17, -30, -3, -17, 10, -41, 2, 16, 17, -33, -11, 10, -14, -5, 12, -14, 2, 4, -16, 14, -15, -12, -5, 0, 21, -18, -32, 2, -4, 13, -5, 8, 3, -14, 8, 29, -26, -42, 8, 31, 28, -27, -14, -9, 28, 3, 38, -10, -13, 21, -3, 28, -30, -11, 10, 25, 8, -57, -17, -1, -2, 2, 20, 16, -9, -5, 5, 8, -12, 0, 6, 16, 26, -31, -10, -3, -4, 19, 2, 15, -9, 0, 5, 3, 27, -42, -4, 25, 3, 10, 
  27, 9, -3, -57, -29, -14, -8, 7, 12, 1, 24, -2, 6, -1, 1, 37, -3, -3, 7, -17, -39, -39, -33, -30, 20, -62, -16, 15, 9, 41, -8, 29, 1, 5, 41, -45, -39, -23, -56, -10, 24, -15, 11, -8, 6, 1, -27, 1, 29, -7, 30, -22, 14, -9, -45, -13, 4, -54, 33, 30, 8, 2, -16, 16, 9, 10, 58, -7, -16, -5, -41, 0, -2, -47, 28, 27, -8, 7, -51, 59, 33, 5, 64, -18, -16, -1, -16, -21, 9, -5, 21, 17, -3, 10, -18, -29, -12, 5, 35, 27, -6, -19, 7, -31, 12, -10, 10, 29, -10, 51, -24, -1, 3, 7, -15, 5, -15, 13, -17, -41, 8, 3, -15, 10, 17, 39, 14, -8, 20, 11, 39, -12, -23, -33, -29, -40, -21, -4, -6, 5, 2, 8, 10, -5, -5, 6, -2, 4, -9, -14, -17, 22, 14, -5, -10, 30, 0, 20, -6, -6, 3, 5, -5, 15, -12, -2, -12, 2, -7, -7, -27, -31, -13, 18, 20, -11, 15, 3, 9, 9, -30, -33, 12, -39, 3, 3, 14, 45, 2, 48, -5, 31, 25, -10, -22, -42, -28, -31, -4, -36, 5, 29, 9, 11, 12, 0, 13, 54, 24, -5, 54, -16, -17, -47, -5, -18, 21, -52, 9, 40, -12, 18, -16, 42, -1, 8, 13, -4, -11, -27, -9, 12, 18, -1, 30, 41, -21, -10, 18, 23, 5, 13, -28, 1, -7, 9, -3, 1, 5, 11, -30, 3, 0, 13, 16, -16, 
  -12, -6, -6, -11, -11, 0, -5, -8, -12, -8, -28, -21, -12, 1, -14, -6, -3, -7, 12, -13, 0, -4, -14, -1, 2, -12, -15, -1, 13, -14, 0, 2, -12, 3, 7, -21, 0, -11, 4, -26, -14, -26, -4, -17, -2, 12, 3, -15, -11, 2, 12, 7, -11, 15, -9, -15, 7, -28, -26, -14, 5, 7, -9, 14, -15, 17, 16, -1, 1, -3, -10, -2, 1, -15, 0, -22, -10, -2, -19, -16, 4, 4, 9, -29, -14, 1, 7, 17, 0, -8, -18, -14, 0, 14, -15, 2, -11, 10, 2, -20, -12, -5, 9, 9, -10, -26, -5, -2, 4, 10, -16, 2, 11, -7, -3, -23, -9, -4, -5, -18, 11, -16, -4, 0, -2, 0, -20, 12, -9, 4, 9, -14, -8, -5, 7, -13, 9, -17, 6, 2, 7, -7, -27, 13, 6, 12, 17, 5, -1, -16, -8, -10, -4, -26, -2, -10, 2, 0, 5, -9, -7, 6, 10, -3, -2, 16, 8, 20, -2, -3, -12, -13, 5, -1, -2, -1, -24, 7, 12, -6, -14, -20, -8, 11, 9, -4, 3, -18, 11, -5, -2, -22, -21, -7, -5, -27, 5, -9, -13, -22, -7, -18, -20, -12, -3, -5, -5, 10, 2, 4, 8, -4, -7, -15, -4, -17, -7, -6, -11, -5, 4, -5, 5, 33, -6, -4, -6, 3, -12, -12, -1, -18, -3, 4, -13, -8, -9, 12, -6, 4, 1, 13, 19, -3, -1, -13, -8, 7, -14, -5, -9, -21, 2, -5, -12, -11, 
  13, -6, 3, -31, -5, 33, -45, -17, 2, -35, -18, 1, -16, -33, -2, -32, -1, -6, -15, -3, -62, -71, -52, -54, -12, -35, -46, -46, 1, -22, -34, 10, 6, 4, 40, -10, -23, -53, -17, -46, -37, -27, 3, -28, -23, -3, 13, -39, -61, -12, 17, -8, -45, -57, -10, -6, -16, -15, 64, -19, 13, -2, 6, 3, -41, -4, 35, -53, -24, -36, -17, -43, -40, -35, 52, -20, -11, -29, -10, 35, -27, 12, -9, -60, -25, -34, 29, -41, -20, -13, 7, -7, 3, 6, 37, -33, -16, -9, 18, -65, -16, -12, 27, -28, 22, -69, -23, 26, -15, 8, -27, -16, 36, 2, 5, -14, -44, 2, -1, -2, 6, -41, 12, 54, -11, -6, 6, 18, -28, -4, 16, 4, 16, -26, 24, 5, 2, -31, -2, -41, -7, -10, 30, -27, -17, 12, -19, -44, -28, 11, -5, -25, 7, -30, -50, -54, 6, 0, -41, -33, 17, -16, 13, -3, 29, 8, -18, -1, -24, -14, -33, -9, -15, -17, -60, -47, 29, 3, 1, 50, -11, -14, -1, -39, -16, 26, -44, 22, -18, -25, -18, -13, -35, -15, -51, -40, -13, -20, 14, -42, -18, 26, -49, 13, 8, -18, -21, -18, 32, -10, 27, -15, -19, -33, 21, 11, 29, -1, 25, 35, -24, -10, 14, 32, 6, -9, 3, -13, 17, -26, 21, -25, 1, 13, 41, -4, 16, -2, -58, 37, 22, 8, -1, -46, 22, -14, 13, -29, 34, -11, 19, 9, 11, 7, 4, 6, 
  -7, 1, 7, 7, 4, -1, -3, -13, 1, 5, -11, -18, 0, 4, -2, -11, 16, -1, -6, -13, -1, -14, 14, 7, 1, -7, -8, -6, 8, 14, -5, -1, -20, -12, 9, -9, -3, 2, 4, -6, 13, -13, -18, -1, 9, -11, -16, -7, -7, 1, -7, 2, -19, 3, 3, -15, -15, -20, -20, -13, -6, -12, -25, -10, -22, -14, -13, -16, -1, 4, 7, -7, 9, -10, -22, -14, 8, 3, -3, 2, 13, 2, 1, -3, -5, 6, 6, -13, 1, 4, -4, -9, -4, -13, 4, -24, -16, -9, -2, -23, -6, 1, -1, 3, -2, -23, -19, -4, 3, -1, -10, 1, -14, 1, 0, 3, 10, -14, -1, -2, 1, -13, -14, -15, -6, -8, 3, -21, -13, -3, 0, -20, -4, 7, -15, -17, -15, -6, 0, -10, 1, -9, -1, 4, -8, -12, 5, 7, -16, -11, 2, 1, -4, -17, -15, -4, -13, 9, 6, -6, -4, -15, 0, -6, -17, -4, 0, -8, 1, 11, -12, 2, 5, 2, -19, 2, -11, -6, -1, 4, -1, -12, -1, 1, -13, -7, -8, 3, -3, -11, -5, -9, 0, 7, 9, 4, -4, -11, 1, -15, 1, -5, -17, -7, 6, -7, 1, -10, -7, 0, -11, -4, -21, 2, 0, 7, 4, 0, -10, -4, -14, -11, -12, -6, -20, -9, 5, 2, 5, 8, 1, -10, -10, 12, -3, -9, 7, -3, 1, 0, -23, -6, -5, 0, -5, 4, 14, -5, -12, -10, 4, -2, 3, 0, -13, -1, 
  -16, 1, 86, 4, 5, 25, 9, -18, -5, -17, -27, -31, 6, 41, -44, -38, 3, 10, 73, -5, -36, 4, 7, 39, -9, -20, 2, -5, 4, -3, -16, -1, 3, -9, 43, -19, -31, -22, -17, 36, -32, -16, -26, 4, -27, 36, -64, -4, -18, 7, 29, 5, -17, 6, 8, 21, 16, 20, -7, -24, 11, -12, -55, 21, -11, -16, 37, -16, -31, 22, 28, -16, -12, -44, -50, -24, -8, -9, -42, -47, -30, -3, 22, 32, 6, 32, -13, 27, 23, -31, -43, -66, 3, 14, -20, -28, -14, 2, 0, 9, -16, 5, -6, 35, 6, 15, -17, -14, 18, 21, -37, -18, -12, 4, 127, -5, 7, -2, -4, -6, -16, 13, -34, 5, -1, 2, -9, 9, 18, 14, -9, 15, -9, 29, -15, 51, 6, 13, -6, -1, -13, -23, 0, -35, -15, -3, 9, 30, 43, 15, 21, 40, 11, 37, -35, 15, -2, 23, -33, 14, -14, 12, 18, 42, 37, 35, 25, -8, 13, -10, 10, 17, 8, -1, -58, -32, -24, 3, 23, 13, 0, -3, 10, 17, 1, -53, -8, -11, 5, -8, -24, 2, -41, -12, 11, -19, -9, 1, 32, 1, 1, -37, -10, -29, -5, 18, 9, -7, 13, -8, -2, 16, -36, -4, -40, -19, -4, -26, -33, 37, -5, -8, 4, 30, 0, -10, 6, -41, -6, -17, -1, 12, 8, 12, -23, -21, -14, -7, -15, -2, -30, 5, 63, -4, 43, -16, -22, -6, 0, 38, -27, 17, -6, 7, 13, 4, 
  -25, 5, -2, -4, -30, -1, -8, -2, -5, 4, 4, -2, 2, 8, -13, 7, -5, 2, 3, -5, -9, 0, 3, 2, -2, -24, 11, -3, -12, -5, -6, -20, 18, -14, -21, -22, -26, -2, -1, -5, -8, 3, -12, -3, 5, -8, -3, -6, -25, 6, -16, -26, -24, 1, -1, -6, 2, 0, -17, -1, 3, -16, -20, 3, -24, -8, 2, -9, 2, 7, -16, -8, 1, -6, -7, -13, -12, 12, 5, 9, -2, 11, 9, -4, -28, 3, -8, -1, -13, -26, -18, -8, 2, -7, -31, 2, -10, -5, -12, -9, -12, -10, -17, -22, 4, -22, -7, -16, -2, -1, -3, -22, 2, 4, -4, 16, 8, -10, -13, -12, 12, -20, 3, -13, 7, -18, 9, 6, 9, -9, -3, 15, 28, -14, -8, -22, -16, 21, -12, -17, -4, 26, 11, 14, -5, 8, 3, 0, -2, 4, -9, -3, -4, -6, -13, -15, -13, 12, -18, -11, -8, 0, -9, -8, -22, 6, -15, 2, -3, -17, -13, -31, 0, -14, -25, -14, -11, 3, -8, -10, -12, 0, 4, -7, 2, -25, 11, -15, 7, 5, 2, -13, 4, 8, -6, 18, 2, 0, 2, -9, -16, -1, 17, -28, -9, 2, -8, -1, 3, -11, 14, 6, -10, -8, 4, -7, -9, 6, -3, 13, 5, -4, -7, 9, 11, 3, 1, 7, -2, -14, 11, -3, -12, 3, -11, -17, 1, -12, -6, -18, 9, 4, -5, 5, 4, 7, 1, -16, -1, -16, 0, -1, 3, 9, -3, 18, 
  12, 0, 59, -14, -17, -18, -25, -42, -10, -13, 0, 22, -6, 28, -4, 58, -2, 8, 63, -37, -11, -20, -24, -28, -24, -53, 23, -37, -4, 18, -46, -9, 35, 5, 1, -1, -33, -9, -15, -36, -36, -32, 6, 35, -6, 35, -30, 0, 4, 0, -31, -10, -8, 6, -12, -2, 9, -23, 20, 9, -9, 8, -20, 34, 9, -6, 3, -49, -28, -50, -36, -48, 20, -39, 29, 14, -18, 38, -19, 28, 29, 14, 22, -34, -63, -40, -19, -2, -22, -39, -6, 17, 1, 19, 8, 13, -14, 6, 21, 20, 16, -25, -2, -61, -26, 3, -20, -11, 11, 46, 38, -16, 30, -2, -16, -22, 12, -16, 11, -20, 27, -13, -13, 8, 33, 35, -12, 6, -3, 4, -16, -2, -44, -18, 6, -2, -5, -11, 12, -8, 1, 26, -28, -20, -10, -8, -7, 20, -15, -15, -31, -7, 12, 7, 7, -23, -9, 10, -48, -17, 40, -7, -10, 9, -18, 0, -3, 16, -4, -11, 10, -17, 13, 26, -8, -17, 12, -3, -9, -8, -18, -16, -24, -32, 3, 0, -30, 36, 17, 45, -6, 35, -4, -17, 1, -15, -29, -24, -1, -19, 14, 18, 3, -20, -22, -12, 39, 13, -3, -8, 15, -13, -1, 8, 17, -4, 1, -18, -3, -10, -18, 15, 23, 3, -8, 2, -35, -19, -3, -1, 18, -6, 3, -16, 6, 19, 12, 19, 41, -12, 16, 5, -20, -7, -9, -31, -21, -30, -32, 4, -22, 47, 1, 32, -5, 0, 
  -14, -4, -15, 3, 5, -17, -9, 6, -9, -2, -20, -6, -7, -16, -6, -7, 9, -16, 3, -11, -8, 6, -11, -12, 0, -10, -10, -11, -14, 1, 2, 1, 3, -5, -12, -3, 1, -3, -3, -11, -1, -11, -6, 5, 1, 6, -1, 3, -18, -12, 8, 2, 1, -13, 1, 4, -8, -14, -22, -7, -14, -10, -13, -9, 2, -15, 3, -8, -2, 5, 4, 7, -13, -11, 0, -12, -3, 4, -7, 4, -10, -11, -4, 4, 2, 1, -12, 1, 0, -14, -7, -3, 2, -9, 3, -7, 4, 2, -13, 0, -9, -8, -14, -6, -10, -11, -9, -11, -5, 1, -12, -7, -7, 5, 3, -11, 0, -11, 5, -11, 2, -4, 0, 0, -7, 6, -12, 0, -9, -7, -7, -4, -6, 5, -8, -15, 0, -14, -1, -10, -16, -4, -11, 5, -5, -8, -8, -11, -10, 3, -9, 3, -10, -4, -16, 0, 4, 1, -4, -9, -2, -1, 8, -16, 4, 1, 8, 4, 7, -2, -3, -4, -7, -9, -1, -16, -12, -5, -12, 0, -5, -13, -11, -7, -4, -21, -5, 3, 7, -9, 0, -4, -3, -2, -2, -9, 0, -6, 8, 3, -7, 8, -4, -7, -9, -1, 7, -13, -7, -6, 5, -7, -8, -4, -5, 6, -13, -8, -5, -3, 2, 6, -3, -2, -15, 6, -3, -13, -1, -12, 0, -2, 1, -15, -14, 5, -9, -9, 1, -13, -7, 0, 9, 6, 7, 3, 5, -2, -6, 5, -5, 5, 4, 1, 4, 7, 
  -23, -14, -3, 25, 6, 11, 63, -3, 1, -19, -37, -23, 3, -14, -7, -19, -23, -14, -17, -7, 9, -9, 8, -1, 27, 14, -17, -6, -5, 19, -6, 1, 0, 1, 2, -6, 2, -7, 12, 8, -7, -8, -9, -17, 12, 8, 10, -4, -4, 7, 1, 2, -5, 8, 21, 12, -2, 16, -6, -23, 16, 5, -6, -8, 2, -3, -6, 11, -12, -11, -10, -15, 19, 20, -10, -36, -6, 8, -10, -28, -20, -5, 35, -11, -14, 5, 20, -2, -3, 27, -21, 1, 8, 1, -13, -25, -20, -2, -5, 6, 6, 8, -14, -8, 24, -6, -13, 5, -14, 17, 23, -5, -2, -2, -20, 30, 12, 1, 17, -12, -8, -8, -3, 6, -14, -2, -33, 27, -4, 10, 12, -15, 20, 9, -15, -4, 21, -10, -15, -6, -16, -1, 6, -3, -19, 1, -35, 2, -4, -4, -11, 1, -7, 0, -25, -2, -4, -15, -8, 5, -9, 11, -13, -9, 7, 19, 15, -11, 8, -5, -19, -6, 11, 6, 5, -12, -11, -5, 3, -9, -8, -5, 10, 7, 8, 4, -8, -16, -9, -24, 48, 25, -5, 2, -32, -10, 0, 3, 29, 3, -16, 13, -18, -2, 6, 18, 18, -12, 7, -3, -3, -4, -4, 0, 0, -19, -4, -3, -3, -1, -8, 15, 45, 13, -2, 8, -6, 4, -10, 16, -24, -15, -10, -26, -17, -36, 13, 9, -6, 8, -8, 9, -13, 17, 45, -17, -5, 7, 14, 1, 0, 9, -7, -4, -18, 6, 
  -8, -1, 10, -30, -41, -21, 5, -23, -14, -30, 8, 15, -8, -1, -48, 6, 3, 12, -10, -34, -15, -14, -11, -36, -10, -22, -7, -10, -2, 18, -5, -13, -8, 3, -7, -30, -37, -29, -28, -31, 6, -7, 7, -3, -7, 19, -26, 16, -14, 0, 4, -6, -24, -15, -12, -6, 2, -13, -27, 1, 13, -8, -22, -14, -7, 6, 9, -40, -11, -36, -23, -31, -9, -30, 23, 2, -5, 22, -30, 25, -11, 10, 11, -41, -6, -33, -16, -9, -16, -43, 2, 37, 8, -25, -24, 2, -8, -4, 16, -8, -11, -10, -4, -17, -9, -45, -6, -5, -4, 5, -37, -8, 9, 11, 4, -24, -22, -9, -21, -21, -10, -24, -29, 6, 10, -12, -12, -10, -5, -10, 1, -27, -13, -8, -1, -25, -10, -14, 10, 6, 11, -9, -18, 2, 5, -5, 11, -8, -11, -9, -13, 0, -10, -11, 8, 18, -4, 26, -29, -4, -1, 9, 23, 2, 1, -9, -4, 18, 3, 23, 0, 1, 1, -8, -19, -28, -14, -5, -15, -22, -3, -6, 7, -10, 12, -29, -10, 14, 10, 9, 13, -11, 39, -1, -12, -31, -27, -35, -16, -26, -15, -6, 2, -7, 3, -10, -9, 22, -32, 7, -1, -12, -18, -36, 0, -37, -10, -6, -14, 33, 3, -15, -15, 0, -15, 9, 23, -29, -16, -36, 0, -35, 6, -29, -9, 9, 8, -8, -32, -28, -21, 11, 2, -19, -11, -10, 10, -9, -3, -19, -29, -13, -11, 39, 13, -9, 
  -21, 10, 2, 12, -14, -13, 14, -18, -3, 26, -44, -53, 9, -11, -3, -46, -28, 3, 31, 14, 12, -20, 10, -21, 7, 17, -37, -11, 11, -6, -16, -13, -28, 7, 4, 30, 39, -26, -9, 13, 3, 37, -26, -6, -1, -3, 15, -42, -22, 5, -1, 1, 22, 3, 34, -2, -10, 8, -36, -9, -14, -1, 5, -15, -22, -3, 20, 19, -16, -17, 52, -21, 13, 30, -34, -32, 5, -1, 18, -52, -39, -12, 31, 6, 19, 4, 4, -5, 8, 34, -22, -26, -8, 3, 14, -71, -1, 1, 40, -4, 19, 0, -2, 12, -4, -25, -33, 19, 6, 26, 1, -19, -8, -10, 21, 2, -6, -8, -23, 6, -12, -20, -26, -14, -7, -16, -14, -10, -3, 11, -5, 15, 29, 24, 34, 2, 23, 3, -1, 19, -17, 19, 18, -26, -22, 1, -5, 2, 36, 3, -28, 21, -6, 34, -7, -33, 9, -13, 10, -19, -12, 8, 5, 8, 26, 21, 43, 12, -4, 17, -32, -6, 5, -12, 36, -18, -33, -6, -22, 19, 41, -13, 2, 3, 10, 32, -55, -39, 4, -13, 34, -17, -14, 0, 42, -3, 23, -18, 24, -6, 9, 18, -20, -32, -11, 7, 13, 8, -38, 11, -6, 13, 2, -4, 12, 6, -8, 1, -44, -11, 15, -13, 8, -34, -39, -1, 9, -5, 10, 9, -14, 19, 26, -10, -32, -29, -15, -1, -5, -51, -40, -13, 8, 41, 10, -5, 14, 8, 3, 15, -31, 5, -19, -13, -10, -13, 
  2, 4, 12, -15, -13, 4, 11, -4, 2, -5, -3, -17, 2, -1, -14, -15, 2, -3, 3, -8, -17, -21, -15, -9, -12, 2, 27, 16, 5, 28, -20, 10, 10, -8, -6, -22, -45, -32, 24, -54, -5, 8, 28, 28, 7, -16, -17, 4, -8, -8, 2, 6, 11, -15, 5, -9, -18, 0, -30, -6, 8, -5, -42, 6, -1, -9, -2, 9, -49, -45, -38, -9, 12, -38, -13, -2, 16, 7, 1, 22, 4, 12, -30, 4, -30, -21, 26, -37, -20, 3, -23, 1, 0, 6, -36, -7, 16, -6, 37, -8, -19, -37, 12, -4, 1, 9, 6, 35, 1, 4, -31, 14, 34, 16, 26, -34, -23, -37, 13, -54, 8, -44, 5, 13, 7, 5, -33, -5, -29, 0, 32, -31, -13, 4, 20, -7, -10, -39, -15, -5, -3, -10, -33, 6, 16, 11, 11, -8, -28, 2, -6, -46, 3, -22, 31, 6, -2, 47, -39, 15, 42, -1, 18, -14, -24, 0, -27, -2, 5, -30, 26, 35, 6, 14, -40, 9, 23, -9, 26, -46, -13, -25, 20, -48, 7, -2, 38, 15, 9, 7, -3, -2, 57, -5, 1, -33, 2, -38, -13, -51, 0, -28, 23, 15, -5, -13, -63, 55, 33, 11, 22, -31, -27, -5, -3, -13, -4, -62, 39, 32, 8, 4, -54, 39, 32, -1, 26, -30, -46, -18, -10, -25, -6, -41, 10, 34, 12, -14, -56, 19, 6, 14, -12, -46, -21, -24, -5, -13, 3, -23, -4, -1, 3, 6, -30, -6, 
  19, 6, 2, -36, -13, -8, 1, -20, 4, -3, 74, 18, -16, -9, -1, 28, 38, 8, 4, -35, -9, -31, 2, -23, -5, -28, 20, 31, 8, -3, -10, 4, 30, 2, 5, -4, -2, -38, -3, -33, 5, 1, 40, 19, 0, 4, 5, 13, 13, 10, 21, -3, -31, -9, 11, -37, 10, -26, 7, 20, 8, 8, -3, 24, 7, 6, 6, -5, -26, -27, -25, 7, 2, -17, -10, 6, 12, -10, -38, 47, 30, 13, 5, -19, -38, 10, -35, -31, -12, -50, 3, 17, 2, -7, -25, 9, 1, 10, -21, -14, -39, -20, 12, -29, 4, -36, 18, 16, -13, 24, -28, 32, 22, 10, -50, -22, -40, -29, -27, -33, 16, -4, 39, 13, -10, -2, 14, 13, 6, 7, -3, 1, -4, -26, -20, -4, 4, -43, 15, 7, 1, 10, -37, -21, -6, -1, 4, 25, -40, 7, -15, -31, -6, 19, -6, 1, -9, 24, -6, -18, 38, 7, -12, 3, -32, -33, 29, -4, 6, -1, -6, 12, 7, 23, -18, 2, 29, 1, -25, 4, -18, -34, 39, -45, 4, -22, 15, 12, 8, 23, -3, 36, 19, 4, -11, -18, -4, -24, 7, -30, -12, 44, 36, -1, 1, -33, 28, 42, 10, 9, 35, -9, 4, -18, -8, 0, 1, 1, 10, 17, -15, -10, 40, 38, 7, -1, -14, 23, 4, 19, -15, -23, -7, 13, -17, 31, 7, -15, 8, 31, -15, -8, -41, 16, 38, -20, 8, -40, 5, -15, 16, 1, 21, 14, -9, -17, 
  -34, 1, -32, -1, -26, -13, 38, 13, -8, -5, -25, -34, -14, 11, -34, -23, -32, 7, 23, -1, 36, 48, -12, 44, -6, -35, 4, -45, -14, -1, -16, -24, -13, -10, 13, -37, -28, -14, 3, -5, -6, 4, -19, -24, -5, 2, 88, -17, -28, -9, 13, -16, 7, 4, 44, 14, -16, 31, -46, -41, -6, -13, 28, -37, 18, -4, 42, 17, -16, -34, 41, -35, -3, -2, 2, -22, 6, -2, 16, -25, -17, 4, 38, -9, -6, 44, 3, -5, 10, 18, -11, -37, 0, 11, -21, -25, 18, 2, 5, 67, -20, 24, 18, 63, 5, 30, -9, -16, 5, -1, 88, 0, -28, 7, -7, 10, 61, 19, 6, 39, -7, 24, -34, -7, 0, 0, 34, -13, -9, 6, -21, 57, 20, 53, 1, 34, 9, 8, -8, -27, -1, 5, 20, 26, 44, -10, 18, 68, 79, 60, 28, 40, -15, 32, -25, -35, -2, 13, -40, 7, -1, -12, 26, -4, -21, 120, 45, 30, -5, -26, -30, -7, -7, -24, 42, -68, -9, -1, 26, -11, 4, 48, 29, 19, -4, 15, -31, -43, -13, -1, 9, -58, 9, -8, 30, -12, 44, -27, 37, -21, -11, 37, -20, -27, -12, 9, 27, 32, -28, -1, 16, 28, 55, 24, 33, 17, -10, -13, -45, -22, -1, 7, 35, -31, -33, -3, 35, 17, -53, 17, 29, 20, 17, 17, -14, -9, 2, 12, -5, 5, 0, -13, -6, 50, 8, -10, 43, 12, -13, 36, -47, -2, -14, -7, 22, -19, 
  13, 0, -14, -8, -18, -17, -7, -4, -8, 2, -13, -3, 9, -7, -11, 9, 11, 10, 7, -5, 0, -1, -15, -19, -10, -10, -1, 0, -10, -6, -16, 2, -5, -7, -6, 1, -10, -13, 4, 2, -4, 0, 9, -6, -9, 14, 8, -7, 14, -11, -9, 4, -4, -6, -5, -10, 9, -17, -3, 12, 6, -2, -13, -6, -15, -10, -2, -16, -6, -2, 4, 3, -12, 3, 4, -10, 4, -4, -25, 23, 7, -10, 3, 6, 1, -6, 3, -8, -12, -7, -14, -18, 11, -8, 2, 6, -1, 10, -8, -1, -10, -10, 10, -6, -8, -3, 2, -6, 9, 2, -12, -12, -17, -12, 1, -12, -3, -11, -14, -5, 11, 2, -10, 7, -13, -10, 5, -14, 0, 13, 4, -7, 13, -1, 5, -3, -11, -3, -12, 5, -14, 0, -7, -11, 2, -2, 8, -5, -5, -7, 4, 7, -7, -12, -10, -4, -13, 3, -14, -21, -6, -6, -2, -17, 3, -12, 6, -9, -7, -36, -1, -2, 7, -5, 1, -12, -7, -11, -8, -14, -2, -11, -3, -7, 3, 2, -5, -8, -1, -8, -19, 8, -21, 6, -11, -5, -17, 1, 7, -9, 3, -16, -1, 6, -15, 6, 10, -3, -9, -12, 8, -13, -11, -10, -14, 7, -11, -17, -5, -7, 4, 3, 1, -6, 6, 1, -10, 4, -8, -5, 6, -11, -5, -6, 3, -6, -4, 7, 2, -3, 8, -2, 13, -1, -2, -7, 8, -7, -8, 5, -7, -6, -13, 12, 5, -2, 
  -27, -6, 3, -11, -10, 1, 5, 9, -17, 7, 6, -34, -14, -9, -20, -29, -30, -11, -1, -4, -4, -3, 6, 16, -1, -11, -9, -41, -8, 10, -6, -37, -4, 2, -3, -28, -18, -19, -28, -25, -8, -41, 0, 14, -10, -12, -12, 15, -21, 6, -11, -8, -9, -7, -25, 8, -22, 6, 7, -13, -14, -3, -19, 3, 1, 1, 0, -7, -28, -3, -10, -23, -18, 6, -26, -18, -4, -8, -11, -39, -24, -7, -15, -29, -30, -10, -17, -6, -5, 18, -31, -7, -9, -14, 1, -33, -17, -7, -8, -2, -27, -4, 4, -21, -7, -9, -1, -12, 2, -8, -9, -46, -19, -13, 9, 13, -22, -1, 8, -9, -11, 11, -7, -12, 7, -2, 6, -9, -30, -3, 0, -6, 2, -22, -14, 9, -18, 21, -31, -2, 0, -8, 7, -21, -19, 6, -13, 0, -17, 0, -30, -6, -15, -18, -22, -19, 5, 11, -11, -28, 3, 2, 5, -15, -13, -3, -20, 4, -3, 10, 9, -10, -14, -9, 0, -22, -34, 1, 6, -8, -32, -24, -21, -8, -36, 21, -13, 0, -7, -7, -1, -19, -32, -13, 8, -1, 1, -11, 13, -17, -5, 8, -17, -4, 4, -8, -5, 6, -37, -12, -1, 2, -6, 3, 1, 3, -7, -21, -33, -43, 3, -3, 6, -47, 0, -2, -12, -3, -3, -1, 1, -23, -20, -5, -6, 3, -8, 3, -5, -19, 5, -6, 0, -1, 8, -4, 9, 0, -27, -14, -7, -13, 3, 0, -1, 21, 
  -21, -6, 22, 42, 18, 31, 28, 38, 3, 34, -35, -65, 1, -6, 13, -14, -48, 8, 11, 35, 31, 6, -10, 10, 3, 24, -29, -52, -7, -3, -6, -18, -27, -5, 38, 16, 7, 16, 24, 19, -14, 42, -7, 6, 4, 5, 22, 1, -14, 15, 28, 21, 14, 31, 10, 33, 5, -2, -25, -21, 6, 16, 11, -33, -4, 2, 35, 29, 11, -7, 7, 27, 13, 18, -16, -2, -1, -8, 21, -12, -18, 0, -9, 10, 21, 35, -7, 41, -3, 24, -33, -16, -5, -4, 5, -34, 4, 5, 35, -10, 34, 33, -20, 41, 2, 6, -11, -7, -8, 27, -2, -12, -15, -1, 48, 33, 5, 11, 1, 28, -2, 46, -44, -48, -8, -16, 2, -12, -37, -1, 1, 22, 34, 30, 14, 20, 12, -9, -71, -29, -3, -1, 4, -46, -22, -5, -35, 11, 15, 23, -20, 29, 13, 24, 4, -17, 12, -3, -20, 3, -2, 4, -2, -9, 6, 34, 32, 25, -5, -3, -46, -30, -6, 5, 42, -31, -12, -7, -27, 6, 65, 32, 11, 30, 8, 34, -35, -8, -4, -3, 37, -25, -1, -2, 9, 6, 30, 7, 17, 0, 12, 6, -14, -10, -3, 19, 18, 25, -15, -8, 5, -3, 10, 24, -19, -31, -3, 9, -25, 11, 3, -2, 41, -1, -22, 10, 19, -10, -8, 12, -2, 9, 9, 17, -30, 1, 6, 3, -2, -45, -6, 3, 28, 42, -9, 21, 10, -4, 5, 9, -44, -2, 0, 2, -30, 37, 
  -36, -17, 19, -47, -49, 17, -17, 2, -11, -26, -31, -64, 68, -8, 6, -68, -7, -7, 33, -20, -12, -4, -7, -10, -26, -6, -11, -29, 77, 38, 25, -24, -42, -4, 55, 7, -38, -15, 18, 12, -2, 38, -20, 19, 60, 25, 84, 13, -10, 13, 40, 41, 54, 57, 37, 33, 6, 53, -23, -33, 55, 26, 54, -16, 0, 21, 12, 15, -39, 28, 14, 13, -1, -11, -17, -27, 12, 1, 3, 23, -38, 15, 62, 43, 24, 30, 9, 47, -14, 51, -52, -39, 38, 41, -14, -26, 16, -3, 41, 20, 5, 45, 22, 70, 7, 4, 19, -1, 18, 13, 4, 7, 13, 16, 31, -28, -34, 27, -15, 35, 21, -9, 30, -37, 27, 34, 36, 22, -46, 2, -4, 10, 1, 21, 22, 17, 40, 17, -52, -33, -8, 39, 21, -23, -28, 16, -22, 1, -53, 61, -15, 31, 12, 1, 37, 24, 8, 47, -12, 3, 7, 22, 51, -43, -26, 15, -19, 55, -11, -10, 26, 28, 39, 12, 24, -14, 1, 11, 6, 9, -10, 33, 4, -7, -11, 22, 17, 10, 88, 9, -2, 30, -12, -10, 40, -12, -13, -6, -3, -10, 20, 4, -39, -13, -6, 18, -22, -27, -34, 8, 21, 16, -43, 60, -16, -3, -15, 7, -81, -28, 37, 9, -21, -58, -25, -12, 77, -57, 25, -10, -46, 37, 21, -34, 7, -51, 17, 20, -47, -52, 24, 15, 61, 9, 26, -14, -44, -26, -3, -32, 17, 35, -10, 20, -42, 49, 
  -12, 0, -17, 15, 5, 11, 9, 12, -5, -22, -12, -13, 10, -3, -9, -15, -17, 8, 22, 9, -5, 6, -3, -5, 11, 6, -8, -14, 5, -11, -7, -30, -13, -2, 2, 14, 6, -10, 0, 10, 7, 24, -23, -8, 18, 4, -2, -41, -12, -7, -2, 9, 9, -2, 24, 10, 15, 14, -2, -15, 4, 3, -20, -2, 11, 2, 9, 5, -38, -10, 14, 3, -6, 20, 1, -15, 7, 5, 2, -5, -20, 6, -11, 0, -2, 17, -16, 5, -8, 5, -4, -11, -15, -13, -8, -37, -3, 13, 20, -6, -2, 8, -14, 2, -7, 14, -33, -16, 7, -9, -3, -30, -2, 2, 0, -15, 14, -15, -7, -1, -1, 15, -21, -9, 9, -17, 6, -8, -25, 17, -17, 6, 33, 21, 20, 6, 9, -1, -29, -13, -6, -13, 20, -12, -1, 0, -2, -6, 14, 35, -11, 26, 7, 53, -28, -6, 0, 6, 11, -17, -16, -7, -4, -6, 8, 12, -3, 14, -5, -20, -21, -18, -11, 11, -4, -12, -17, 5, -23, 27, 23, 8, 1, 0, -4, 12, -31, -35, 0, -17, 5, -46, 4, -9, 3, -4, 4, -10, -15, 5, -1, 7, -1, -22, 11, -1, 9, -18, -11, 1, -17, -7, -23, 8, -7, 0, -10, -10, 1, -10, 1, -4, 9, -34, -27, 12, 17, -2, 3, 22, -16, 36, 19, -1, -20, -41, -14, -11, -25, -16, -40, 10, 11, -11, 29, 8, 7, -5, 4, -20, -27, -22, -11, -1, -32, -21, 
  22, 9, -9, -45, -23, -23, -9, -15, -1, -27, 5, 15, 11, -22, -51, 48, 23, 14, -3, -33, 3, -15, -12, 4, -14, -41, 25, 20, -9, 41, -37, 56, 6, -12, 3, -10, -36, -15, -24, -8, -17, -37, 12, -8, 10, -3, -44, 30, 9, 11, -11, -14, 3, 1, 6, -39, 6, -18, -9, 3, -6, -2, 10, -18, 8, -8, 18, -4, 46, 13, -5, 41, -3, -4, 25, 2, -7, -3, 15, 41, -2, 19, 20, 2, -18, -23, 2, -9, 9, -8, 4, 31, 12, -12, 23, -3, -13, 14, 38, -25, 23, -34, -1, -25, 12, -16, -6, 24, 6, -14, 17, -5, 6, -4, -30, -27, -30, -39, -9, -50, 13, -13, -1, 8, 7, -17, -10, 20, 10, 9, 25, -18, 22, 17, -9, -1, 1, -9, -15, 9, -1, 18, -11, -22, 3, -6, 11, -16, 11, -15, -27, -14, -9, -67, 29, 8, -2, 43, -55, 26, 17, 3, -11, -3, -14, -7, -10, 8, 11, -21, -11, -9, -1, -3, -24, -3, 23, -7, -37, -16, -29, -22, 25, -14, -9, -20, 17, 17, -2, 19, -1, 13, 10, 0, 23, -51, 2, -15, 1, -42, 10, -14, 24, -4, 2, -12, 26, 17, -9, -10, 11, -39, -19, -28, -6, -34, -8, -38, 15, 12, 3, -12, 10, 33, 20, 4, -22, -39, -44, -11, 0, -39, 3, -49, 37, 11, -7, -9, -28, 19, 18, -8, 52, -32, -15, -15, -21, 2, 10, -8, -28, 14, 20, -2, -13, -14, 
  18, 9, 32, -39, -54, -16, 17, -13, 10, -38, -5, -5, 1, 6, -40, 14, 7, 6, -17, -29, -17, -17, -11, -28, -2, -69, 3, 1, 8, 16, -32, -11, 17, 5, -3, -16, -11, 6, -3, -29, 3, -55, 25, -19, 20, 15, -28, -1, -7, -4, 14, -12, -9, 19, -12, -5, -17, -14, 3, -18, 7, -12, -26, -1, -6, -9, 17, -36, -10, -39, -13, -34, 15, -35, -4, 4, -1, 5, -30, 9, 27, -6, 10, -51, -14, -32, -12, -23, 1, -35, -8, 19, -15, -26, 3, -10, 6, 2, -3, -8, -21, -22, -3, -42, -2, 2, -30, 1, -2, -2, -3, -7, -7, -1, -8, -28, -24, -20, -10, -21, -1, -5, -5, 22, 0, 0, -10, 18, 0, 4, -4, -34, 2, -9, 0, -30, -15, 6, 1, -10, 14, 1, -9, 0, -18, -9, 15, 2, -15, -22, 1, -14, -1, 8, -23, -22, -12, 9, -18, -7, 0, -10, -21, 5, -17, -7, 1, -11, 2, 7, -1, 17, 10, -18, -28, -38, -23, 8, 17, -3, 21, -3, 34, 21, -7, -2, -23, -22, 6, 14, 6, -20, 4, -13, -12, -21, -1, -23, 8, -1, 11, 24, -8, -11, -10, -19, 9, 6, 10, 1, -8, -6, -15, -24, 4, -18, 4, 6, 12, -4, 13, -10, 23, 12, -1, -11, -1, -34, -13, -4, -14, -23, -4, -15, 11, 25, -10, -9, -13, 10, 30, -5, -7, 1, -21, -7, -36, -2, -14, -7, -12, -12, -2, 17, -8, -4, 
  -29, -5, 23, 16, -15, 52, 26, 43, -17, 20, -44, -64, -3, -3, -4, -34, -38, -13, 21, 27, -20, 26, -11, 20, 0, -9, 4, -48, 10, 3, 12, -50, -18, 0, -31, -3, 20, -2, 4, 27, -6, 16, -28, -9, -8, 12, -13, -24, -16, -13, 3, 26, 11, 23, 5, 35, 4, 27, -4, -43, 5, 18, 12, -19, 3, -8, -1, 39, -9, 13, 33, -4, -2, 7, -8, -38, 13, 27, 19, -42, -37, -3, 50, 17, 19, 27, -14, 15, -3, 10, -21, -40, 4, 21, 6, -24, -9, 5, 29, 30, 4, 30, -21, 26, 1, 18, -5, -3, 12, -9, 21, -5, 23, -5, -4, -13, -4, -7, 4, -17, 3, 10, -13, -23, -10, -24, 21, 7, -20, 12, -11, 34, -6, 15, -27, 5, -6, 23, -55, -33, -23, 10, 27, -36, -26, 4, -15, 37, 10, 62, 10, 62, 5, 18, -40, -60, 14, 1, -28, -25, -5, -10, 2, 27, 25, 38, 24, 2, -10, 5, -26, -46, -9, 10, 19, -4, -39, -13, -27, 11, 76, 18, 0, 40, -5, 14, -50, -30, 8, -29, 19, 2, -12, -6, 29, 20, 32, -3, 22, 4, 4, 25, 3, -23, -3, 33, -11, -17, -11, -11, -23, -3, 18, 21, 15, 12, -13, 0, -17, -19, 11, 14, 20, -23, -11, -2, 41, -16, 2, 19, 4, 16, 19, 6, 4, -58, 26, 6, -6, -44, -39, -10, -12, 50, 41, 4, 19, 7, -15, -19, -25, -18, 15, -13, -14, -19, 
};
const TfArray<2, int> tensor_dimension10 = { 2, { 64,256 } };
const TfArray<1, float> quant10_scale = { 1, { 0.011158491484820843, } };
const TfArray<1, int> quant10_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const ALIGN(16) int32_t tensor_data11[64] = { -1087, -188, 580, -1061, -85, -877, -70, -1514, 804, 658, 216, -1406, 358, -1180, -321, -378, -151, -933, -250, -1539, 67, -727, -1223, -197, -942, -486, 388, -601, -351, -1084, 635, -397, -1093, -1005, 380, -1057, -403, -160, -2286, -2133, -1175, 770, -306, -1210, -1674, -805, -1937, -702, -458, -407, -980, -1168, -63, -702, 195, -1608, -654, -1629, 660, 702, -395, 218, -584, -260, };
const TfArray<1, int> tensor_dimension11 = { 1, { 64 } };
const TfArray<1, float> quant11_scale = { 1, { 0.00023427733685821295, } };
const TfArray<1, int> quant11_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const ALIGN(16) int8_t tensor_data12[2*64] = { 
  -40, -27, 26, 2, -50, -72, -24, -63, -17, -6, -34, -24, 83, -74, 64, -13, 34, 29, -32, -38, -73, -5, 32, 14, -66, 0, 42, 39, 7, -34, -24, -12, 34, -4, 5, 20, -31, 12, 64, 8, 66, -57, -37, 21, -37, -19, -61, 10, 42, 58, 28, 34, -56, 18, 16, 13, 7, -37, -85, -68, -30, 35, -6, -74, 
  34, 15, -39, 33, -10, 30, -80, -75, -80, 58, -127, -43, 7, -32, 39, -26, 47, -50, -16, -64, -55, -16, 17, 26, -7, -79, -12, -89, -1, -59, 33, 27, 10, -2, 70, -1, -44, 34, -20, -3, -47, 42, -59, -5, -60, -48, -4, 32, -6, -23, 46, -41, 12, -58, -44, 61, -25, -38, 32, 16, -12, 1, -15, -25, 
};
const TfArray<2, int> tensor_dimension12 = { 2, { 2,64 } };
const TfArray<1, float> quant12_scale = { 1, { 0.0036678926553577185, } };
const TfArray<1, int> quant12_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const ALIGN(8) int32_t tensor_data13[2] = { -743, 743, };
const TfArray<1, int> tensor_dimension13 = { 1, { 2 } };
const TfArray<1, float> quant13_scale = { 1, { 0.000361811020411551, } };
const TfArray<1, int> quant13_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<4, int> tensor_dimension14 = { 4, { 1,1,62,40 } };
const TfArray<1, float> quant14_scale = { 1, { 0.0030484069138765335, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const TfArray<4, int> tensor_dimension15 = { 4, { 1,1,62,8 } };
const TfArray<1, float> quant15_scale = { 1, { 0.028356395661830902, } };
const TfArray<1, int> quant15_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const TfArray<4, int> tensor_dimension16 = { 4, { 1,62,1,8 } };
const TfArray<1, float> quant16_scale = { 1, { 0.028356395661830902, } };
const TfArray<1, int> quant16_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const TfArray<4, int> tensor_dimension17 = { 4, { 1,31,1,8 } };
const TfArray<1, float> quant17_scale = { 1, { 0.028356395661830902, } };
const TfArray<1, int> quant17_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant17 = { (TfLiteFloatArray*)&quant17_scale, (TfLiteIntArray*)&quant17_zero, 0 };
const TfArray<4, int> tensor_dimension18 = { 4, { 1,1,31,8 } };
const TfArray<1, float> quant18_scale = { 1, { 0.028356395661830902, } };
const TfArray<1, int> quant18_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant18 = { (TfLiteFloatArray*)&quant18_scale, (TfLiteIntArray*)&quant18_zero, 0 };
const TfArray<4, int> tensor_dimension19 = { 4, { 1,1,31,16 } };
const TfArray<1, float> quant19_scale = { 1, { 0.020995430648326874, } };
const TfArray<1, int> quant19_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant19 = { (TfLiteFloatArray*)&quant19_scale, (TfLiteIntArray*)&quant19_zero, 0 };
const TfArray<4, int> tensor_dimension20 = { 4, { 1,31,1,16 } };
const TfArray<1, float> quant20_scale = { 1, { 0.020995430648326874, } };
const TfArray<1, int> quant20_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant20 = { (TfLiteFloatArray*)&quant20_scale, (TfLiteIntArray*)&quant20_zero, 0 };
const TfArray<4, int> tensor_dimension21 = { 4, { 1,16,1,16 } };
const TfArray<1, float> quant21_scale = { 1, { 0.020995430648326874, } };
const TfArray<1, int> quant21_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant21 = { (TfLiteFloatArray*)&quant21_scale, (TfLiteIntArray*)&quant21_zero, 0 };
const TfArray<2, int> tensor_dimension22 = { 2, { 1,256 } };
const TfArray<1, float> quant22_scale = { 1, { 0.020995430648326874, } };
const TfArray<1, int> quant22_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant22 = { (TfLiteFloatArray*)&quant22_scale, (TfLiteIntArray*)&quant22_zero, 0 };
const TfArray<2, int> tensor_dimension23 = { 2, { 1,64 } };
const TfArray<1, float> quant23_scale = { 1, { 0.098642751574516296, } };
const TfArray<1, int> quant23_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant23 = { (TfLiteFloatArray*)&quant23_scale, (TfLiteIntArray*)&quant23_zero, 0 };
const TfArray<2, int> tensor_dimension24 = { 2, { 1,2 } };
const TfArray<1, float> quant24_scale = { 1, { 0.22689077258110046, } };
const TfArray<1, int> quant24_zero = { 1, { 43 } };
const TfLiteAffineQuantization quant24 = { (TfLiteFloatArray*)&quant24_scale, (TfLiteIntArray*)&quant24_zero, 0 };
const TfArray<2, int> tensor_dimension25 = { 2, { 1,2 } };
const TfArray<1, float> quant25_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant25_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant25 = { (TfLiteFloatArray*)&quant25_scale, (TfLiteIntArray*)&quant25_zero, 0 };
const TfLiteReshapeParams opdata0 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs0 = { 2, { 0,1 } };
const TfArray<1, int> outputs0 = { 1, { 14 } };
const TfLiteConvParams opdata1 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs1 = { 3, { 14,6,7 } };
const TfArray<1, int> outputs1 = { 1, { 15 } };
const TfLiteReshapeParams opdata2 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs2 = { 2, { 15,2 } };
const TfArray<1, int> outputs2 = { 1, { 16 } };
const TfLitePoolParams opdata3 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs3 = { 1, { 16 } };
const TfArray<1, int> outputs3 = { 1, { 17 } };
const TfLiteReshapeParams opdata4 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs4 = { 2, { 17,3 } };
const TfArray<1, int> outputs4 = { 1, { 18 } };
const TfLiteConvParams opdata5 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs5 = { 3, { 18,8,9 } };
const TfArray<1, int> outputs5 = { 1, { 19 } };
const TfLiteReshapeParams opdata6 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs6 = { 2, { 19,4 } };
const TfArray<1, int> outputs6 = { 1, { 20 } };
const TfLitePoolParams opdata7 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs7 = { 1, { 20 } };
const TfArray<1, int> outputs7 = { 1, { 21 } };
const TfLiteReshapeParams opdata8 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs8 = { 2, { 21,5 } };
const TfArray<1, int> outputs8 = { 1, { 22 } };
const TfLiteFullyConnectedParams opdata9 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs9 = { 3, { 22,10,11 } };
const TfArray<1, int> outputs9 = { 1, { 23 } };
const TfLiteFullyConnectedParams opdata10 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs10 = { 3, { 23,12,13 } };
const TfArray<1, int> outputs10 = { 1, { 24 } };
const TfLiteSoftmaxParams opdata11 = { 1 };
const TfArray<1, int> inputs11 = { 1, { 24 } };
const TfArray<1, int> outputs11 = { 1, { 25 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 2480, (TfLiteIntArray*)&tensor_dimension0, 2480, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 8, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 960, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data7, (TfLiteIntArray*)&tensor_dimension7, 32, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data8, (TfLiteIntArray*)&tensor_dimension8, 384, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data9, (TfLiteIntArray*)&tensor_dimension9, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data10, (TfLiteIntArray*)&tensor_dimension10, 16384, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data11, (TfLiteIntArray*)&tensor_dimension11, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant11))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data12, (TfLiteIntArray*)&tensor_dimension12, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant12))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data13, (TfLiteIntArray*)&tensor_dimension13, 8, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant13))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension14, 2480, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant14))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 2480, (TfLiteIntArray*)&tensor_dimension15, 496, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant15))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension16, 496, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant16))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 496, (TfLiteIntArray*)&tensor_dimension17, 248, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant17))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension18, 248, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant18))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 496, (TfLiteIntArray*)&tensor_dimension19, 496, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant19))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension20, 496, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant20))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 496, (TfLiteIntArray*)&tensor_dimension21, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant21))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension22, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant22))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 256, (TfLiteIntArray*)&tensor_dimension23, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant23))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 16, (TfLiteIntArray*)&tensor_dimension24, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant24))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension25, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant25))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs4, (TfLiteIntArray*)&outputs4, const_cast<void*>(static_cast<const void*>(&opdata4)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs5, (TfLiteIntArray*)&outputs5, const_cast<void*>(static_cast<const void*>(&opdata5)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs6, (TfLiteIntArray*)&outputs6, const_cast<void*>(static_cast<const void*>(&opdata6)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs7, (TfLiteIntArray*)&outputs7, const_cast<void*>(static_cast<const void*>(&opdata7)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs8, (TfLiteIntArray*)&outputs8, const_cast<void*>(static_cast<const void*>(&opdata8)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs9, (TfLiteIntArray*)&outputs9, const_cast<void*>(static_cast<const void*>(&opdata9)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs10, (TfLiteIntArray*)&outputs10, const_cast<void*>(static_cast<const void*>(&opdata10)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs11, (TfLiteIntArray*)&outputs11, const_cast<void*>(static_cast<const void*>(&opdata11)), OP_SOFTMAX, },
};
static std::vector<void*> overflow_buffers;
static void * AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  if (current_location - bytes < tensor_boundary) {
    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers.push_back(ptr);
    return ptr;
  }

  current_location -= bytes;

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static std::vector<scratch_buffer_t> scratch_buffers;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBuffer(ctx, b.bytes);
  if (!b.ptr) {
    return kTfLiteError;
  }

  scratch_buffers.push_back(b);

  *buffer_idx = scratch_buffers.size() - 1;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > static_cast<int>(scratch_buffers.size()) - 1) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static TfLiteTensor* GetTensor(const struct TfLiteContext* context,
                               int tensor_idx) {
  return &tflTensors[tensor_idx];
}

static TfLiteEvalTensor* GetEvalTensor(const struct TfLiteContext* context,
                                       int tensor_idx) {
  return &tflEvalTensors[tensor_idx];
}

} // namespace

TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.GetTensor = &GetTensor;
  ctx.GetEvalTensor = &GetEvalTensor;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 26;
  for(size_t i = 0; i < 26; ++i) {
    tflTensors[i].type = tensorData[i].type;
    tflEvalTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    tflTensors[i].allocation_type = tensorData[i].allocation_type;
#else
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;
    tflEvalTensors[i].dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    if(tflTensors[i].allocation_type == kTfLiteArenaRw){
      uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

     tflTensors[i].data.data =  start;
     tflEvalTensors[i].data.data =  start;
    }
    else{
       tflTensors[i].data.data = tensorData[i].data;
       tflEvalTensors[i].data.data = tensorData[i].data;
    }
#else
    tflTensors[i].data.data = tensorData[i].data;
    tflEvalTensors[i].data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
    if (tflTensors[i].allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tflTensors[i].data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for(size_t i = 0; i < 12; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
tflNodes[i].custom_initial_data = nullptr;
      tflNodes[i].custom_initial_data_size = 0;
if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for(size_t i = 0; i < 12; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteTensor* trained_model_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  25, 
};
TfLiteTensor* trained_model_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus trained_model_invoke() {
  for(size_t i = 0; i < 12; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif
  scratch_buffers.clear();
  for (size_t ix = 0; ix < overflow_buffers.size(); ix++) {
    free(overflow_buffers[ix]);
  }
  overflow_buffers.clear();
  return kTfLiteOk;
}
